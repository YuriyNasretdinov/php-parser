//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/scanner"
)

//line php5/php5.y:21
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   *scanner.Token
	boolWithToken           boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	altSyntaxNode           altSyntaxNode
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_POW_EQUAL = 57462
const T_DIV_EQUAL = 57463
const T_CONCAT_EQUAL = 57464
const T_MOD_EQUAL = 57465
const T_AND_EQUAL = 57466
const T_OR_EQUAL = 57467
const T_XOR_EQUAL = 57468
const T_SL_EQUAL = 57469
const T_SR_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_POW = 57473
const T_SL = 57474
const T_SR = 57475
const T_IS_IDENTICAL = 57476
const T_IS_NOT_IDENTICAL = 57477
const T_IS_EQUAL = 57478
const T_IS_NOT_EQUAL = 57479
const T_IS_SMALLER_OR_EQUAL = 57480
const T_IS_GREATER_OR_EQUAL = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:3857

type foreachVariable struct {
	node  node.Node
	byRef bool
}

type nodesWithEndToken struct {
	nodes    []node.Node
	endToken *scanner.Token
}

type boolWithToken struct {
	value bool
	token *scanner.Token
}

type simpleIndirectReference struct {
	all  []*expr.Variable
	last *expr.Variable
}

type altSyntaxNode struct {
	node  node.Node
	isAlt bool
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 51,
	104, 435,
	105, 435,
	-2, 433,
	-1, 102,
	78, 332,
	-2, 411,
	-1, 114,
	78, 451,
	146, 447,
	-2, 457,
	-1, 154,
	104, 435,
	105, 435,
	-2, 433,
	-1, 204,
	144, 306,
	147, 306,
	-2, 430,
	-1, 205,
	104, 435,
	105, 435,
	144, 307,
	147, 307,
	-2, 433,
	-1, 271,
	78, 451,
	-2, 457,
	-1, 298,
	78, 334,
	-2, 413,
	-1, 302,
	146, 448,
	-2, 458,
	-1, 311,
	78, 333,
	-2, 412,
	-1, 378,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 274,
	-1, 379,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 275,
	-1, 380,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 276,
	-1, 381,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 277,
	-1, 382,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 278,
	-1, 383,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 279,
	-1, 384,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 280,
	-1, 385,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 281,
	-1, 392,
	104, 435,
	105, 435,
	-2, 433,
	-1, 400,
	147, 142,
	-2, 147,
	-1, 462,
	104, 435,
	105, 435,
	147, 514,
	158, 514,
	-2, 433,
	-1, 463,
	147, 515,
	158, 515,
	-2, 430,
	-1, 464,
	104, 435,
	105, 435,
	-2, 433,
	-1, 486,
	147, 156,
	158, 156,
	-2, 430,
	-1, 487,
	104, 435,
	105, 435,
	147, 157,
	158, 157,
	-2, 433,
	-1, 493,
	146, 472,
	-2, 516,
	-1, 499,
	146, 472,
	-2, 517,
	-1, 521,
	78, 332,
	-2, 369,
	-1, 539,
	93, 135,
	94, 135,
	95, 135,
	-2, 0,
	-1, 551,
	147, 142,
	-2, 147,
	-1, 564,
	147, 142,
	-2, 147,
	-1, 581,
	144, 308,
	147, 308,
	-2, 430,
	-1, 582,
	104, 435,
	105, 435,
	144, 309,
	147, 309,
	-2, 433,
	-1, 681,
	78, 334,
	-2, 371,
	-1, 779,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 397,
	-1, 780,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 398,
	-1, 781,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 399,
	-1, 782,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 400,
	-1, 783,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 401,
	-1, 784,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 402,
	-1, 785,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 403,
	-1, 786,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 404,
	-1, 789,
	78, 333,
	-2, 370,
	-1, 839,
	37, 201,
	-2, 198,
	-1, 879,
	31, 128,
	32, 128,
	33, 128,
	143, 128,
	-2, 0,
	-1, 914,
	95, 140,
	-2, 0,
	-1, 916,
	31, 127,
	32, 127,
	33, 127,
	143, 127,
	-2, 0,
	-1, 943,
	93, 136,
	94, 136,
	95, 136,
	-2, 0,
	-1, 971,
	29, 189,
	-2, 4,
	-1, 980,
	147, 142,
	-2, 147,
	-1, 997,
	144, 193,
	-2, 195,
}

const yyPrivate = 57344

const yyLast = 9012

var yyAct = [...]int{

	102, 571, 843, 565, 1006, 965, 714, 807, 420, 826,
	123, 131, 606, 200, 340, 918, 734, 567, 452, 815,
	474, 683, 296, 594, 461, 592, 421, 61, 579, 142,
	319, 315, 39, 98, 264, 390, 158, 517, 130, 2,
	444, 115, 289, 978, 959, 118, 138, 140, 447, 544,
	145, 485, 937, 657, 663, 664, 228, 228, 162, 477,
	657, 331, 934, 941, 7, 940, 931, 821, 330, 737,
	653, 6, 43, 26, 655, 654, 709, 653, 562, 939,
	657, 267, 44, 516, 656, 658, 659, 358, 432, 665,
	325, 656, 658, 659, 953, 932, 1002, 653, 735, 921,
	251, 655, 654, 793, 298, 954, 897, 853, 153, 933,
	586, 656, 658, 659, 270, 728, 665, 137, 586, 543,
	898, 493, 272, 121, 192, 204, 311, 632, 192, 316,
	320, 618, 585, 323, 114, 258, 329, 241, 633, 5,
	510, 305, 619, 586, 450, 121, 121, 192, 499, 121,
	121, 657, 663, 664, 511, 560, 339, 141, 677, 678,
	126, 228, 121, 494, 310, 179, 561, 39, 653, 179,
	182, 183, 655, 654, 159, 475, 357, 201, 556, 162,
	506, 976, 656, 658, 659, 675, 676, 665, 179, 557,
	177, 176, 359, 267, 507, 228, 178, 180, 181, 929,
	178, 180, 181, 907, 117, 175, 360, 906, 355, 177,
	176, 350, 904, 241, 126, 271, 121, 104, 861, 178,
	180, 181, 356, 228, 175, 351, 270, 386, 126, 229,
	121, 425, 230, 352, 272, 312, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 233, 313,
	302, 133, 657, 451, 855, 791, 595, 745, 301, 639,
	232, 232, 228, 717, 300, 134, 620, 631, 120, 653,
	456, 630, 624, 231, 231, 333, 451, 336, 393, 209,
	451, 623, 611, 229, 597, 273, 230, 453, 610, 749,
	120, 120, 353, 228, 303, 120, 596, 229, 265, 595,
	230, 473, 233, 440, 748, 449, 604, 120, 294, 446,
	295, 293, 287, 281, 131, 396, 233, 1018, 509, 160,
	977, 490, 513, 254, 241, 253, 521, 271, 1001, 950,
	915, 472, 885, 882, 504, 870, 825, 814, 930, 727,
	39, 449, 693, 434, 634, 492, 449, 740, 491, 502,
	498, 399, 505, 497, 625, 716, 621, 463, 465, 521,
	430, 120, 428, 307, 913, 232, 541, 1013, 980, 892,
	467, 484, 7, 139, 297, 120, 471, 297, 231, 6,
	486, 824, 479, 480, 818, 809, 808, 192, 548, 495,
	593, 682, 436, 437, 439, 546, 552, 273, 448, 232,
	587, 572, 564, 572, 577, 572, 580, 458, 228, 551,
	265, 400, 231, 537, 344, 288, 278, 345, 437, 436,
	436, 295, 437, 275, 274, 588, 39, 232, 179, 182,
	183, 250, 222, 196, 448, 189, 191, 195, 194, 448,
	231, 144, 122, 1010, 876, 1009, 999, 5, 490, 177,
	176, 135, 539, 989, 984, 540, 615, 983, 923, 178,
	180, 181, 188, 190, 175, 912, 232, 609, 449, 449,
	703, 704, 492, 498, 880, 491, 497, 811, 805, 231,
	804, 309, 798, 308, 712, 1019, 699, 400, 581, 228,
	703, 704, 547, 545, 542, 501, 449, 232, 616, 449,
	614, 449, 398, 446, 348, 617, 156, 981, 316, 905,
	231, 126, 320, 605, 637, 638, 975, 521, 917, 891,
	641, 642, 890, 888, 681, 732, 521, 578, 306, 197,
	435, 179, 39, 521, 521, 521, 521, 521, 192, 645,
	224, 225, 648, 531, 874, 802, 803, 830, 635, 695,
	696, 650, 572, 257, 652, 710, 647, 700, 228, 228,
	228, 448, 448, 521, 7, 572, 718, 295, 726, 39,
	39, 6, 91, 126, 515, 731, 531, 572, 580, 179,
	126, 810, 729, 125, 612, 267, 259, 228, 228, 448,
	730, 438, 448, 713, 448, 705, 739, 707, 680, 455,
	723, 702, 424, 125, 295, 733, 987, 128, 129, 295,
	687, 504, 232, 738, 126, 459, 742, 741, 270, 736,
	126, 454, 126, 569, 570, 231, 272, 295, 228, 971,
	228, 518, 427, 426, 304, 512, 744, 449, 299, 5,
	126, 446, 573, 124, 754, 574, 282, 286, 469, 686,
	260, 261, 132, 816, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 789, 743, 521, 54, 758, 321, 756, 295, 757,
	864, 573, 317, 232, 574, 508, 259, 720, 573, 750,
	595, 574, 463, 322, 790, 792, 231, 285, 62, 126,
	521, 121, 132, 126, 468, 121, 486, 228, 126, 271,
	121, 457, 263, 799, 576, 404, 402, 795, 208, 572,
	448, 831, 207, 985, 531, 827, 572, 850, 819, 823,
	226, 234, 1007, 531, 45, 725, 828, 813, 295, 832,
	531, 531, 531, 531, 531, 851, 295, 856, 423, 453,
	260, 261, 232, 232, 232, 742, 986, 609, 163, 796,
	559, 858, 239, 338, 1017, 231, 231, 231, 229, 991,
	531, 230, 268, 957, 955, 269, 925, 229, 521, 273,
	230, 232, 232, 45, 521, 521, 896, 233, 259, 584,
	893, 233, 265, 438, 231, 231, 233, 847, 848, 849,
	846, 845, 844, 599, 878, 601, 600, 228, 550, 228,
	877, 1003, 521, 883, 881, 572, 889, 884, 998, 854,
	875, 960, 232, 800, 232, 935, 901, 859, 860, 820,
	126, 760, 900, 572, 903, 231, 759, 231, 722, 651,
	39, 649, 259, 1, 646, 259, 120, 284, 602, 887,
	120, 470, 260, 261, 259, 120, 514, 228, 899, 438,
	521, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 519, 259,
	531, 922, 481, 259, 283, 908, 449, 395, 256, 39,
	446, 324, 521, 936, 203, 285, 260, 261, 469, 260,
	261, 232, 202, 199, 136, 879, 909, 531, 260, 261,
	944, 519, 521, 335, 231, 521, 873, 829, 521, 938,
	572, 962, 572, 970, 39, 1008, 39, 812, 703, 704,
	706, 703, 704, 343, 39, 747, 39, 39, 753, 863,
	521, 445, 608, 260, 261, 572, 970, 260, 261, 956,
	982, 589, 958, 39, 590, 961, 591, 39, 39, 521,
	684, 572, 255, 839, 993, 994, 572, 995, 964, 997,
	963, 902, 483, 403, 914, 895, 916, 979, 838, 448,
	835, 575, 39, 572, 1011, 531, 924, 566, 926, 927,
	1012, 531, 531, 1005, 572, 1015, 992, 1004, 724, 919,
	39, 232, 919, 232, 394, 558, 389, 164, 341, 697,
	538, 943, 928, 290, 231, 947, 231, 460, 948, 531,
	161, 157, 318, 314, 39, 127, 528, 607, 996, 969,
	39, 968, 945, 967, 966, 837, 836, 834, 401, 40,
	568, 15, 14, 822, 972, 719, 801, 694, 11, 249,
	75, 232, 76, 116, 266, 64, 89, 598, 90, 520,
	101, 74, 12, 326, 231, 100, 99, 531, 79, 519,
	119, 526, 3, 990, 41, 0, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 519, 519, 519, 519, 519,
	0, 0, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 1014, 531,
	0, 0, 0, 0, 0, 519, 0, 1020, 0, 0,
	169, 171, 170, 192, 0, 0, 0, 0, 0, 531,
	0, 0, 531, 0, 0, 531, 209, 685, 0, 0,
	0, 0, 0, 0, 688, 689, 690, 691, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 0, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 531, 809, 808, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 666, 667, 0, 0, 0, 0,
	0, 0, 519, 0, 0, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 788, 0, 0, 685, 670, 669, 657, 663, 664,
	671, 672, 673, 674, 677, 678, 668, 666, 667, 0,
	0, 869, 0, 0, 653, 0, 679, 661, 655, 654,
	0, 0, 0, 0, 0, 660, 0, 662, 656, 658,
	659, 675, 676, 665, 0, 0, 0, 0, 0, 0,
	519, 0, 0, 0, 0, 0, 519, 519, 670, 669,
	657, 663, 664, 671, 672, 673, 674, 677, 678, 0,
	0, 0, 0, 0, 0, 31, 0, 653, 867, 679,
	661, 655, 654, 0, 519, 0, 0, 0, 660, 0,
	662, 656, 658, 659, 675, 676, 665, 0, 0, 147,
	151, 155, 0, 0, 0, 165, 0, 0, 0, 868,
	0, 0, 51, 198, 0, 871, 872, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 519, 235, 236, 237, 238, 0, 154, 240,
	0, 242, 243, 244, 245, 246, 247, 248, 0, 252,
	0, 0, 0, 0, 262, 205, 0, 0, 0, 276,
	277, 0, 279, 280, 0, 0, 0, 0, 227, 227,
	0, 0, 0, 291, 519, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	0, 910, 0, 0, 519, 0, 0, 519, 0, 0,
	519, 0, 670, 669, 657, 663, 664, 671, 672, 673,
	674, 677, 678, 0, 0, 240, 0, 0, 209, 0,
	342, 653, 519, 679, 661, 655, 654, 0, 0, 0,
	0, 0, 660, 942, 662, 656, 658, 659, 675, 676,
	665, 519, 0, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 387,
	0, 155, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 670,
	669, 657, 663, 664, 671, 672, 673, 674, 677, 678,
	0, 0, 0, 0, 0, 0, 240, 0, 653, 433,
	433, 661, 655, 654, 0, 422, 441, 0, 0, 660,
	0, 662, 656, 658, 659, 675, 676, 665, 0, 0,
	155, 155, 0, 0, 466, 0, 0, 433, 0, 0,
	0, 0, 0, 433, 291, 0, 0, 0, 0, 433,
	433, 0, 0, 155, 443, 0, 433, 496, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 462, 464, 0,
	0, 0, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 478, 95, 0, 0, 0,
	487, 0, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 45, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 553, 81, 82, 0,
	349, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 209, 0, 0, 0,
	0, 0, 93, 0, 555, 0, 0, 143, 113, 109,
	103, 489, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 155, 911, 0, 78, 42, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 666, 667, 0, 0, 0, 0, 582, 0,
	583, 0, 0, 0, 0, 0, 0, 613, 92, 77,
	0, 0, 0, 0, 63, 482, 97, 0, 0, 488,
	58, 57, 59, 60, 73, 120, 0, 0, 0, 0,
	0, 626, 628, 670, 669, 657, 663, 664, 671, 672,
	673, 674, 677, 678, 667, 636, 0, 0, 0, 0,
	0, 0, 653, 0, 679, 661, 655, 654, 0, 0,
	0, 0, 0, 660, 0, 662, 656, 658, 659, 675,
	676, 665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 670, 669, 657, 663, 664, 671,
	672, 673, 674, 677, 678, 0, 192, 0, 342, 701,
	0, 0, 0, 653, 0, 679, 661, 655, 654, 0,
	711, 0, 0, 0, 660, 0, 662, 656, 658, 659,
	675, 676, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 433,
	391, 715, 715, 169, 171, 170, 192, 173, 177, 176,
	746, 0, 0, 0, 0, 0, 433, 751, 178, 180,
	181, 188, 190, 175, 0, 155, 0, 0, 0, 422,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 668, 666, 667, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 862,
	0, 0, 462, 0, 0, 841, 193, 173, 177, 176,
	478, 842, 478, 0, 840, 172, 487, 174, 178, 180,
	181, 188, 190, 175, 670, 669, 657, 663, 664, 671,
	672, 673, 674, 677, 678, 0, 0, 0, 0, 0,
	0, 0, 797, 653, 0, 679, 661, 655, 654, 806,
	0, 0, 0, 0, 660, 0, 662, 656, 658, 659,
	675, 676, 665, 0, 0, 847, 848, 849, 846, 845,
	844, 657, 663, 664, 671, 672, 673, 674, 677, 678,
	0, 0, 0, 852, 0, 0, 433, 0, 653, 0,
	0, 661, 655, 654, 433, 433, 0, 0, 0, 817,
	0, 865, 656, 658, 659, 675, 676, 665, 0, 0,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 342, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 16, 25, 36, 0, 0, 37, 10, 0, 27,
	0, 32, 81, 82, 8, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 715,
	0, 422, 9, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 644, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 4, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 16, 25, 36,
	0, 0, 37, 10, 0, 27, 0, 32, 81, 82,
	8, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 9, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 503, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 4, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 16, 25, 36, 0, 0, 37, 10,
	0, 27, 0, 32, 81, 82, 8, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 9, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 1021, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	1016, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 1000, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 988, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 974, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 973, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	952, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 951, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 949, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 886, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 698, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 0, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	563, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 327, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 946, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 920, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 0, 35, 721, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	337, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 334, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 489, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 488, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 866, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 629, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 627, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 292, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	431, 97, 45, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 0, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 45, 97, 0, 0, 407, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	388, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 152,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 150,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 146,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 442, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 841, 0, 0, 0, 0, 93,
	842, 0, 0, 840, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 169, 171, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 848, 849, 846, 845, 844,
	0, 0, 0, 0, 0, 92, 77, 794, 0, 0,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 668, 666, 667, 833,
	0, 0, 0, 857, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 669,
	657, 663, 664, 671, 672, 673, 674, 677, 678, 0,
	0, 169, 171, 170, 192, 0, 0, 653, 0, 679,
	661, 655, 654, 0, 0, 0, 0, 0, 660, 0,
	662, 656, 658, 659, 675, 676, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 169, 171, 170, 192, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	752, 169, 171, 170, 192, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 708, 169, 171,
	170, 192, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 643, 169, 171, 170, 192, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 640, 169, 171, 170, 192, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 0,
	0, 0, 622, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 603, 169, 171, 170, 192, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 0,
	554, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 169, 171,
	170, 192, 0, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 193, 173, 177, 176, 169, 171, 170, 192, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 169, 171,
	170, 192, 0, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 169, 171, 170, 192, 397, 0, 0, 0, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 169, 171, 170, 192, 347, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 169, 171, 170,
	192, 346, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 666, 667, 167,
	168, 179, 182, 183, 184, 185, 186, 187, 189, 191,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	193, 173, 177, 176, 0, 0, 0, 0, 0, 172,
	0, 174, 178, 180, 181, 188, 190, 175, 670, 669,
	657, 663, 664, 671, 672, 673, 674, 677, 678, 169,
	171, 170, 192, 0, 0, 0, 0, 653, 0, 679,
	661, 655, 654, 0, 0, 0, 0, 0, 660, 0,
	662, 656, 658, 659, 675, 676, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	667, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	670, 669, 657, 663, 664, 671, 672, 673, 674, 677,
	678, 171, 170, 192, 0, 0, 0, 0, 0, 653,
	0, 679, 661, 655, 654, 0, 0, 0, 0, 0,
	660, 0, 662, 656, 658, 659, 675, 676, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 669, 657, 663, 664, 671, 672, 673, 674,
	677, 678, 192, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 661, 655, 654, 0, 0, 0, 0,
	0, 660, 0, 662, 656, 658, 659, 675, 676, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	657, 663, 664, 671, 672, 673, 674, 677, 678, 192,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	661, 655, 654, 0, 0, 0, 0, 0, 660, 0,
	662, 656, 658, 659, 675, 676, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 657, 663, 664,
	671, 672, 673, 674, 677, 678, 192, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 661, 655, 654,
	0, 0, 0, 0, 0, 0, 0, 662, 656, 658,
	659, 675, 676, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 177, 176,
	0, 0, 0, 0, 0, 0, 0, 174, 178, 180,
	181, 188, 190, 175, 657, 663, 664, 671, 672, 673,
	674, 677, 678, 192, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 655, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 658, 659, 675, 676,
	665, 105, 106, 126, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 105, 106, 126, 0, 0, 0,
	0, 0, 0, 0, 529, 177, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 180, 181, 188, 190,
	175, 0, 0, 524, 0, 527, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 522, 113, 109, 523, 524, 0, 527, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	530, 233, 0, 0, 0, 522, 113, 109, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 787, 536,
	0, 525, 0, 0, 0, 535, 534, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 525, 0, 0, 0, 535, 534,
	532, 533,
}
var yyPact = [...]int{

	-1000, -1000, 2475, -1000, -1000, -1000, -1000, -1000, 296, 501,
	570, 107, -1000, 306, -1000, -1000, 914, -1000, 227, 227,
	5583, 295, 227, 6795, 6685, 6575, 362, 162, 756, 6905,
	-1000, 8040, 292, 291, 287, -1000, 387, 6905, 913, 26,
	912, 904, 6905, -1000, -1000, -1000, -1000, 680, -1000, 676,
	-1000, 1368, 286, 6905, 436, 218, 218, 6905, 6905, 6905,
	6905, -1000, -1000, 7125, -1000, 6905, 6905, 6905, 6905, 6905,
	6905, 6905, 285, 6905, -1000, 177, 175, 891, 6905, 665,
	703, 278, 277, 6905, 6905, 270, 6905, 6905, -1000, 165,
	-1000, -1000, 887, 840, -1000, 164, 269, 6133, -1000, 163,
	160, -1000, 228, 830, 560, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 116, 137, -1000, 556, 231, -1000,
	386, -1000, 216, 339, -1000, 830, -1000, 91, 610, 604,
	-1000, 674, 830, -1000, 901, -1000, -70, 4503, 5429, 7125,
	5275, 752, 26, 521, 6905, 272, -1000, 7987, -1000, 707,
	-1000, 7934, -1000, 360, 1606, 8132, -1000, 67, -1000, -1000,
	150, 64, 26, -73, 48, 8132, -1000, 6905, 6905, 6905,
	6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905,
	6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905,
	6905, 6905, 703, 6465, 218, 6905, 897, -1000, 7881, 358,
	341, -1000, 671, 670, -1000, 1368, 7828, -1000, -1000, 6355,
	6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905, 6905,
	6905, 6905, 699, -1000, -1000, -1000, -1000, -1000, 228, 520,
	830, 555, 554, -1000, -1000, 400, 400, 448, 400, 215,
	7761, 213, 400, 400, 400, 400, 400, 400, 400, -1000,
	6243, -1000, 400, 6905, 6905, 389, 684, 852, -1000, 246,
	7015, 218, 8324, 134, 231, 543, -1000, 485, 517, 830,
	664, 116, 137, 537, 6905, 6905, 8132, 8132, 6905, 8132,
	8132, 6905, 574, 684, 843, -1000, 786, 6905, 6133, 152,
	17, 7708, 218, 6905, 6905, 892, -1000, 1698, 228, 111,
	6905, 6905, 116, 386, 138, -1000, 6905, 351, -1000, -1000,
	2319, 228, -1000, 630, 36, -1000, 666, 830, -4, -1000,
	606, 830, 856, 545, -77, 8856, -1000, -1000, -1000, -1000,
	-1000, -1000, 267, -1000, -1000, -1000, -1000, -1000, 227, 265,
	350, -39, 8132, -1000, 349, 348, -1000, -1000, -1000, -1000,
	-1000, 162, -1000, 6905, -1000, -1000, 806, 263, 8856, -1000,
	6905, 8462, 8549, 8223, 8324, 8274, 8636, 8723, 1836, 34,
	34, 34, 448, 400, 448, 448, 57, 57, 297, 297,
	297, 297, 38, 38, 38, 38, -1000, 7655, 6905, 31,
	-1000, -1000, 996, 741, 8, -82, 4347, -1000, -1000, 256,
	563, 668, 612, 385, 612, 6905, 8324, 708, 8324, 8324,
	8324, 8324, 8324, 8324, 8324, 8324, 8324, 8324, 8324, 8324,
	-15, -1000, -1000, 254, 830, 228, 134, 134, 242, -1000,
	-1000, -1000, 147, 8132, 135, -1000, -1000, -1000, -1000, 803,
	848, 7598, 158, 370, 231, 140, -1000, -1000, 116, 137,
	-1000, 6905, -1000, -1000, 133, 830, 485, 134, 116, 133,
	-16, -1000, 1368, -1000, 119, 209, 7545, 132, -1000, -1000,
	-1000, 123, 207, -1000, -1000, 6023, 5913, -1000, -1000, 122,
	118, -1000, -1000, -20, 197, -1000, -1000, 1368, 218, 6905,
	-1000, 231, 231, -1000, -1000, 110, 7488, 231, 231, -1000,
	7431, -1000, 2163, -1000, -1000, -1000, -1000, 610, 844, 527,
	-1000, 604, 841, 522, -1000, 839, 8856, -1000, 8079, -1000,
	-1000, 485, 516, 830, 245, 8856, -1000, -1000, -1000, -1000,
	632, 532, 8856, 8856, 8856, 8856, 8856, 195, 456, 4659,
	4191, 342, 6905, 6905, 458, -1000, 919, -1000, -1000, 7374,
	-84, 563, -1000, 8132, 6905, 8374, 340, 218, 204, 204,
	5121, 838, 8856, 704, 563, 192, -43, -1000, 26, -1000,
	-1000, -1000, 485, 508, 830, 383, 612, -1000, -1000, -60,
	-1000, -1000, 1368, -1000, 703, -91, 699, 699, 228, -1000,
	-1000, 199, 643, 6905, -1000, 134, -1000, -1000, 108, -1000,
	-1000, -1000, -1000, -1000, 6905, -1000, -1000, 156, 141, -1000,
	6905, 6905, 116, 7317, -1000, 485, -1000, -1000, -1000, 6905,
	-1000, -1000, -1000, -1000, -1000, -1000, 7264, 218, 8132, 218,
	-1000, -1000, -1000, 5693, -1000, -1000, 8132, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 836, -1000, -1000,
	831, -1000, -1000, 8856, 8856, 8856, 8856, 8856, 8856, 8856,
	8856, 8856, 8856, 8856, 8856, 8856, 8856, 8856, 8856, 8856,
	8856, 8856, 8856, 8856, 8856, 8856, 8856, 8856, 8856, 8833,
	830, 485, 8856, 106, -55, 7209, 573, 717, 121, 121,
	-71, -71, 1935, 338, -1000, 227, 5583, 452, 336, -1000,
	334, 8132, -1000, 6905, 241, 438, 333, 916, -1000, 8856,
	190, 8374, -1000, -1000, 595, -1000, 218, 238, 595, -1000,
	-1000, -1000, -93, -1000, 697, 235, 189, 691, 563, 464,
	830, 485, -1000, -60, 7156, 612, 231, 6905, -1000, -40,
	6905, 643, -1000, 105, 231, -1000, 7154, 643, 6905, 6905,
	69, 1896, -1000, 633, -1000, 5803, -1000, -1000, -1000, -1000,
	-1000, 1239, -71, -71, 121, 121, 121, 121, 8586, 8673,
	1980, -51, -51, -71, 1785, 1383, 8171, 8499, 8412, 20,
	20, 20, 20, -78, -78, -78, -78, 8856, 1186, 485,
	188, -1000, -1000, 8856, 8856, -1000, -1000, -1000, -1000, 5583,
	-1000, 449, 227, 299, -1000, 6905, 1053, -1000, -1000, -1000,
	-1000, -1000, 330, -1000, 691, 186, 204, -1000, 699, 185,
	4035, 8856, -1000, 381, 612, 380, 377, 223, -1000, 788,
	-1000, 485, 2007, -1000, -1000, 784, -38, -1000, 707, 709,
	-1000, 826, 612, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8324, -1000, 63, -1000, -1000, 366, -1000, 58,
	54, -1000, -1000, -1000, 134, 8132, 218, -1000, 1490, 8856,
	-1000, 1734, 8079, -1000, 321, 219, -1000, 183, -1000, 4659,
	-1000, 376, 4967, -1000, -48, 4967, 314, -1000, -1000, 774,
	-1000, -1000, 187, -94, -1000, -49, -98, -1000, 825, 26,
	-1000, -108, -79, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1490, 8856, -1000, -1000, 4659, 4813, 4659, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3879, 182, 3723, 3567, -53, -1000,
	772, 8856, -1000, 771, 8856, -116, 821, 8856, -1000, 612,
	-1000, 619, 8079, 4659, -1000, -1000, -1000, 3411, 3255, -1000,
	374, -1000, -1000, -1000, 169, -1000, -1000, -117, -1000, 8856,
	222, -1000, -1000, 364, 619, -1000, 313, 310, 688, 737,
	528, -1000, 3099, -1000, 309, -1000, -1000, 767, 8856, -1000,
	563, -1000, -1000, -1000, -1000, 612, 709, 818, 302, -1000,
	2943, -1000, -1000, 181, -62, -1000, 811, -1000, -1000, -1000,
	701, 301, 612, -1000, -1000, 701, -1000, 221, -1000, -1000,
	-1000, -1000, -1000, 612, 2787, 762, -1000, 170, 343, -1000,
	2631, -1000,
}
var yyPgo = [...]int{

	0, 29, 1094, 1092, 38, 31, 30, 572, 1091, 1090,
	134, 217, 204, 88, 1385, 82, 72, 59, 684, 1422,
	1088, 33, 1086, 1085, 1083, 136, 1082, 36, 37, 1081,
	1080, 1079, 1078, 135, 1077, 1076, 24, 1075, 26, 48,
	45, 1074, 708, 34, 1073, 1, 1072, 1070, 27, 1069,
	73, 68, 61, 1068, 1067, 1066, 35, 1065, 1063, 4,
	1062, 1061, 1060, 17, 1059, 1058, 1057, 1056, 1055, 51,
	5, 1054, 1053, 1051, 1049, 1048, 2, 1047, 631, 1046,
	39, 0, 1045, 1043, 1042, 117, 1041, 1040, 553, 1037,
	1033, 42, 8, 1032, 9, 1030, 1029, 1028, 14, 49,
	1027, 1026, 1024, 1018, 1017, 1013, 3, 1007, 16, 1001,
	1000, 998, 995, 993, 28, 992, 991, 990, 988, 985,
	983, 982, 21, 980, 976, 974, 25, 971, 23, 12,
	962, 40, 961, 959, 958, 955, 41, 6, 19, 18,
	22, 953, 945, 939, 13, 937, 933, 930, 15, 853,
	7, 20,
}
var yyR1 = [...]int{

	0, 149, 80, 80, 81, 81, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 82, 82,
	4, 4, 4, 4, 83, 83, 5, 5, 5, 5,
	84, 84, 6, 6, 6, 6, 53, 53, 85, 85,
	24, 24, 24, 24, 24, 25, 25, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 103, 103, 58, 58, 104,
	104, 105, 105, 59, 101, 101, 56, 51, 52, 144,
	144, 145, 145, 60, 61, 61, 64, 64, 64, 64,
	65, 65, 2, 113, 113, 109, 109, 114, 114, 138,
	138, 137, 137, 137, 147, 147, 148, 148, 57, 57,
	102, 102, 141, 141, 141, 141, 99, 99, 99, 150,
	150, 146, 146, 95, 95, 96, 96, 54, 54, 55,
	55, 106, 106, 107, 107, 63, 63, 62, 62, 62,
	62, 140, 140, 140, 115, 115, 69, 69, 69, 69,
	86, 86, 27, 27, 27, 87, 87, 87, 87, 108,
	108, 66, 66, 66, 66, 68, 116, 116, 143, 143,
	117, 117, 118, 118, 70, 70, 71, 119, 119, 74,
	74, 73, 72, 72, 75, 75, 142, 142, 110, 110,
	111, 111, 120, 120, 76, 76, 76, 76, 76, 76,
	112, 112, 112, 112, 67, 67, 100, 100, 98, 98,
	97, 97, 126, 126, 124, 124, 125, 125, 125, 127,
	127, 42, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 50, 50, 50, 50,
	47, 47, 47, 47, 46, 46, 1, 94, 94, 93,
	93, 93, 93, 23, 23, 23, 23, 23, 23, 23,
	23, 11, 11, 11, 11, 45, 45, 45, 43, 43,
	41, 41, 134, 134, 133, 49, 49, 49, 121, 121,
	121, 139, 139, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 28, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	35, 35, 35, 35, 29, 29, 29, 29, 29, 29,
	29, 122, 122, 151, 151, 123, 123, 123, 123, 14,
	14, 48, 48, 16, 17, 18, 19, 19, 135, 135,
	128, 130, 130, 77, 129, 129, 129, 40, 40, 44,
	44, 12, 22, 22, 20, 20, 20, 21, 21, 21,
	10, 10, 10, 9, 9, 13, 13, 131, 131, 132,
	132, 132, 39, 39, 136, 136, 92, 92, 38, 38,
	38, 91, 91, 90, 90, 90, 90, 90, 90, 90,
	90, 88, 88, 88, 88, 33, 33, 33, 33, 33,
	33, 34, 34, 34, 37, 37, 37, 37, 37, 37,
	37, 37, 89, 89, 36, 36, 30, 30, 31, 32,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 4, 2, 3, 1,
	1, 3, 2, 4, 3, 1, 1, 3, 2, 4,
	3, 1, 1, 3, 2, 4, 5, 4, 2, 0,
	1, 1, 1, 1, 4, 1, 2, 3, 5, 8,
	3, 5, 9, 3, 2, 3, 2, 3, 2, 3,
	3, 2, 3, 3, 3, 1, 2, 5, 8, 8,
	5, 1, 6, 3, 3, 0, 9, 0, 4, 1,
	0, 1, 2, 8, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 9, 7, 6, 1, 2, 1, 2,
	0, 2, 1, 0, 2, 0, 2, 1, 3, 0,
	2, 1, 2, 4, 1, 4, 1, 4, 1, 4,
	3, 5, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 0, 4, 0, 5, 0, 2, 0,
	3, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	1, 2, 3, 3, 1, 3, 1, 1, 2, 2,
	3, 1, 1, 2, 4, 3, 5, 1, 3, 2,
	0, 3, 2, 1, 8, 3, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 2, 3, 1, 3, 1,
	1, 3, 4, 3, 0, 1, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 5, 4, 3, 1, 0, 1,
	3, 1, 2, 1, 4, 3, 2, 1, 1, 0,
	1, 3, 6, 3, 4, 6, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 4, 5, 4, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 9, 10, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 3, 1, 0, 4, 3,
	4, 1, 2, 2, 4, 3, 4, 4, 4, 4,
	2, 1, 1, 3, 2, 1, 3, 2, 1, 1,
	4, 1, 2, 0, 2, 0, 2, 1, 0, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 1,
	3, 2, 4, 3, 1, 1, 1, 4, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 2, 2, 3,
	1, 1, 3, 2, 1, 1, 1, 1, 3, 3,
	1, 0, 2, 0, 1, 5, 3, 3, 1, 1,
	1, 3, 3, 1, 1, 1, 5, 1, 2, 0,
	3, 4, 4, 1, 1, 1, 0, 1, 2, 3,
	3, 1, 4, 4, 1, 1, 1, 1, 2, 1,
	4, 4, 1, 1, 4, 0, 1, 1, 1, 4,
	4, 1, 1, 3, 1, 2, 3, 1, 1, 4,
	0, 0, 2, 5, 3, 3, 1, 6, 4, 4,
	2, 2, 2, 1, 2, 1, 4, 3, 3, 6,
	3, 1, 1, 1, 4, 4, 4, 2, 2, 4,
	2, 2, 1, 3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -149, -80, -3, 2, -25, -51, -52, 51, 79,
	44, -53, -26, 10, -60, -61, 38, 142, 7, 21,
	20, 23, 30, 34, 35, 39, -50, 46, 98, 19,
	14, -14, 48, 25, 27, 144, 40, 43, 36, -1,
	-64, -2, 97, -16, -15, 37, 52, 99, 53, 100,
	54, -19, 59, 92, -18, 104, 105, 153, 152, 154,
	155, -48, -42, 146, -37, 107, 108, 109, 110, 111,
	112, 113, 6, 156, -29, -47, -46, 141, 96, -20,
	91, 49, 50, 4, 5, 84, 85, 86, 11, -35,
	-32, -7, 140, 74, 62, 18, 60, 148, -21, -22,
	-23, -30, -81, 82, -11, 8, 9, 66, 67, 81,
	63, 64, 65, 80, -10, -136, -44, -12, -40, -9,
	157, 12, 146, -81, 142, 82, 10, -82, 37, 38,
	-4, -81, 82, 144, 158, 145, 10, -85, -48, 146,
	-48, -25, -1, 79, 146, -48, 144, -14, 97, 98,
	144, -14, 144, -15, -19, -14, 144, -86, -27, 12,
	157, -87, -1, 12, -100, -14, 144, 129, 130, 87,
	89, 88, 159, 151, 161, 167, 153, 152, 162, 131,
	163, 164, 132, 133, 134, 135, 136, 137, 165, 138,
	166, 139, 90, 150, 146, 146, 146, 142, -14, 10,
	-144, 151, 10, 10, -15, -19, -14, 52, 52, 160,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 146, -14, 104, 105, -18, -19, -81, 79,
	82, -11, -12, 98, -18, -14, -14, -14, -14, -42,
	-14, -50, -14, -14, -14, -14, -14, -14, -14, -49,
	146, -48, -14, 148, 148, -121, 17, -88, -33, 12,
	76, 77, -14, 57, -43, -11, -41, -81, 79, 82,
	-21, -10, -136, -12, 146, 146, -14, -14, 146, -14,
	-14, 148, -88, 17, 17, 75, -88, 148, 146, -91,
	-90, -14, 151, 148, 148, 82, -140, 146, -81, 78,
	148, 142, -10, 157, 78, -140, 142, 147, 144, 142,
	-80, -81, 144, 158, -83, -5, -81, 82, -84, -6,
	-81, 82, 29, -81, 10, 160, -24, 143, 2, -25,
	-51, -52, 51, -25, 145, -146, -25, 145, 21, -144,
	-98, -97, -14, -141, 142, 145, 144, 144, 144, 144,
	144, 158, -16, 142, -19, 144, 158, -144, 160, 144,
	158, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -43, -14, 145, -101,
	-56, -19, -19, -15, -102, 10, -85, 144, 144, 10,
	146, -65, 55, -113, 55, 58, -14, 151, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-92, -38, -19, 59, 82, -81, 78, 78, 147, 147,
	147, 147, -13, -14, -13, 141, -33, -33, 17, 148,
	57, -14, 11, -19, -131, -132, -40, -39, -10, -136,
	10, 142, -139, -140, 78, 82, -81, 57, -10, 78,
	-89, -36, -19, -15, -19, -15, -14, -13, 140, 75,
	75, -13, -91, 149, -151, 158, 58, -17, -19, -13,
	-13, 10, 147, -115, -50, -69, -15, -19, 151, 83,
	-140, -39, -40, 10, 52, -13, -14, -39, -40, 10,
	-14, 144, -80, 143, -140, -4, 144, 158, 29, -81,
	144, 158, 29, -81, 10, 29, 160, -28, -78, -7,
	-31, -81, 79, 82, 60, 148, -8, 62, -79, 18,
	74, -11, 154, 155, 153, 152, 146, 146, -95, -85,
	-85, -48, 144, 158, -99, 144, -99, 144, -27, -14,
	12, 146, -28, -14, 145, -14, 147, 158, 29, 29,
	147, 158, 160, 143, 146, -106, -107, -63, -62, 60,
	61, -45, -81, 79, 82, -109, 56, -45, 142, -114,
	-45, -15, -19, -19, 91, 147, 158, 146, -81, -127,
	-125, -124, -126, 148, -128, 57, 149, 149, -34, 10,
	13, 12, 10, 143, 148, 143, -129, -77, -130, -140,
	148, 142, -10, -14, -40, -81, -131, -40, 147, 158,
	147, 147, 147, 149, 149, 147, -14, 151, -14, 151,
	149, 149, 147, 158, 147, -17, -14, -140, -140, 149,
	143, -140, -140, 143, 143, -5, 10, 29, -6, 10,
	29, 10, -28, 148, 153, 152, 162, 131, 163, 164,
	159, 151, 161, 132, 133, 167, 88, 89, 87, 130,
	129, 134, 135, 136, 137, 165, 166, 138, 139, 150,
	82, -81, 146, -122, -123, -78, 17, 78, -78, -78,
	-78, -78, -78, 147, -54, 93, 94, -96, 22, 144,
	-98, -14, 143, 32, 33, -99, 31, -99, 143, 160,
	-106, -14, 144, -56, -137, -19, 151, 59, -137, -57,
	-25, 145, 10, -28, -103, 41, -106, 147, 158, -144,
	82, -81, 142, -114, -108, 158, -43, 160, -38, -92,
	148, -126, -128, -13, -131, 149, -14, -135, 148, 148,
	-13, -14, 143, -134, -36, 58, -17, -17, -69, 10,
	10, -78, -78, -78, -78, -78, -78, -78, -78, -78,
	-78, -78, -78, -78, -78, -78, -78, -78, -78, -78,
	-78, -78, -78, -78, -78, -78, -78, 145, -78, -81,
	-122, 149, -151, 158, 58, 10, 52, 147, 144, -48,
	-25, -55, 93, 94, 144, 144, -14, -150, 145, 144,
	143, 144, 31, -28, 147, -138, 58, -19, 146, -138,
	-85, 160, -58, 42, 146, 147, -94, 44, -63, -145,
	83, -81, -108, 143, -66, -110, -67, -68, -111, -120,
	47, 38, 44, -76, 103, 102, 101, 98, 99, 100,
	-45, -139, -14, 147, -13, 149, -129, 149, -128, -13,
	-13, 149, 143, -133, 57, -14, 151, 149, -78, 145,
	147, -78, -78, -25, 95, -48, 145, -98, -150, -85,
	144, -94, 147, -137, -92, 147, 28, -28, 142, -45,
	142, 142, 146, 12, 143, -112, 12, 144, 158, -1,
	-76, 10, -116, -45, 149, 143, 149, 149, -131, -17,
	-78, 58, 144, 145, -85, 147, -85, 142, -148, -25,
	145, 147, -148, 144, -85, 12, -85, -85, -93, 12,
	151, 160, 144, 158, 160, 10, -144, 160, -143, 158,
	144, 142, -78, -85, -147, -25, 145, -85, -85, 143,
	147, 143, 143, 147, 158, 12, -28, 12, -28, 160,
	10, -28, -45, -117, -118, -70, -71, -72, -73, -74,
	-45, 10, -85, 143, 26, 142, 12, 151, 160, -28,
	146, 143, -70, 144, 144, 45, 29, 78, 24, 144,
	-85, 12, -28, -106, -119, -45, -75, -76, 10, 144,
	143, 147, 158, 10, -104, -105, -59, 41, -142, 144,
	142, -45, -59, 146, -85, -45, 143, 12, 147, 142,
	-85, 143,
}
var yyDef = [...]int{

	3, -2, -2, 2, 6, 7, 8, 9, 0, 0,
	0, 0, 45, 4, 87, 88, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	65, 0, 0, 0, 0, 71, 0, 0, 0, 89,
	0, 0, 303, 429, 430, 316, 96, 0, 98, 0,
	102, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 298, 299, 300, 348, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	416, 417, 0, 0, 420, 355, 0, 481, 454, 455,
	456, 410, -2, 0, 0, 353, 354, 356, 357, 358,
	359, 360, 361, 362, -2, 0, 459, 0, 0, 462,
	474, 463, 0, 0, 3, 0, 4, 0, 0, 0,
	19, 20, 0, 17, 0, 46, 0, 0, 0, 0,
	0, 0, 89, 0, 218, 0, 54, 0, 303, 331,
	56, 0, 58, 430, -2, 0, 61, 0, 161, 162,
	0, 0, 89, 167, 0, 217, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	0, 90, 100, 103, -2, -2, 0, 97, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 236, 249, 251, 250, 435, 332, 0,
	0, 0, 0, 331, 252, 270, 271, 272, 273, 284,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 296,
	0, 347, 297, 465, 465, 0, 349, 350, 493, 495,
	0, 0, 302, 0, 351, 338, 339, 332, 0, 0,
	341, -2, 0, 0, 0, 0, 507, 508, 0, 510,
	511, 465, 0, 0, 0, 364, 0, 465, 481, 0,
	423, 486, 0, 465, 465, 0, 323, 0, -2, 0,
	465, 0, -2, 475, 0, 330, 0, 0, 11, 3,
	0, -2, 14, 0, 0, 25, 26, 0, 0, 31,
	32, 0, 0, 22, 0, 0, 38, 47, 40, 41,
	42, 43, 0, 133, 39, 50, 131, 39, 0, 0,
	0, 219, 221, 53, 126, 126, 55, 57, 59, 60,
	62, 0, 163, 0, 433, 63, 0, 0, 0, 64,
	0, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, -2, -2,
	-2, -2, -2, -2, -2, -2, 282, 0, 0, 0,
	84, 86, -2, 430, 0, 0, 0, 73, 74, 0,
	-2, 105, 0, 0, 0, 0, 233, 0, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	0, 477, 478, 0, 0, 334, 0, 0, 229, 431,
	432, 346, 0, 466, 0, 301, 494, 491, 492, 0,
	0, 0, 414, 0, 446, 467, 468, 471, 447, 0,
	472, 0, 231, 352, 0, 0, 334, 0, 458, 0,
	0, 512, -2, -2, -2, 430, 0, 0, 418, 363,
	419, 0, 0, 315, 482, 424, 0, 490, 434, 0,
	0, 5, 151, 0, 0, 154, -2, -2, 0, 0,
	325, 0, 449, -2, 519, 0, 0, 0, 450, -2,
	0, 10, 0, 13, 324, 18, 15, 0, 0, 28,
	16, 0, 0, 34, 21, 0, 0, 37, 366, 367,
	368, -2, 0, 0, 0, 421, 374, 375, 376, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 137, -2,
	0, 0, 218, 0, 0, 126, 0, 126, 160, 0,
	165, -2, 168, 216, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 75, -2, 0, 141, 143, 89, 148,
	149, 150, 335, 0, 0, 0, 0, 101, 170, 104,
	107, -2, -2, 234, 0, 0, 480, 480, 333, 285,
	230, 227, 228, 465, 223, 0, 311, 310, 0, 501,
	502, 503, 497, 498, 0, 500, 439, 444, 445, 443,
	465, 0, 448, 0, 449, 333, 343, 450, 504, 0,
	505, 506, 509, 313, 312, 314, 484, 0, 485, 0,
	452, 453, 152, 0, 153, 158, 159, 326, 327, 460,
	461, 328, 329, 464, 12, 24, 27, 0, 30, 33,
	0, 23, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 421, 0, 423, 428, 0, 0, 384, 385,
	407, 408, 0, 0, 48, 0, 0, 139, 0, 51,
	0, 220, 122, 0, 0, 0, 0, 0, 164, 0,
	0, 286, 67, 85, 109, 111, 0, 0, 109, 70,
	118, 39, 0, 120, 77, 0, 0, 317, 147, 91,
	0, 337, 170, 106, 200, 0, 351, 0, 476, 0,
	465, 226, 222, 0, 446, 496, 0, 436, 465, 465,
	0, 0, 473, 340, 513, 0, 488, 489, 155, 29,
	35, 0, 378, 379, 380, 381, 382, 383, 386, 387,
	388, 389, 390, 391, 392, 393, 394, 395, 396, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 0, -2,
	0, 373, 422, 424, 0, 365, 518, 409, 44, 0,
	138, 0, 0, 0, 132, 218, 0, 39, 129, 130,
	123, 124, 0, 166, 317, 0, 0, 112, 480, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 144, 0,
	92, 336, 200, 95, 169, 0, 0, 173, 0, -2,
	199, 0, 0, 202, 204, 205, 206, 207, 208, 209,
	108, 235, 232, 479, 0, 225, 440, 0, 438, 0,
	0, 469, 470, 342, 0, 483, 0, 377, 405, 0,
	372, 426, 427, 134, 0, 0, 39, 0, 39, -2,
	125, 0, 0, 110, 0, 0, 0, 121, 39, 0,
	39, 39, 0, 145, 94, 0, 212, 172, 0, 89,
	203, 0, 0, 176, 224, 499, 442, 441, 344, 487,
	406, 0, 49, 39, -2, 0, -2, 39, 68, 116,
	39, 113, 69, 119, 0, 0, 0, 0, 0, 321,
	0, 0, 171, 0, 0, 0, 0, 0, 175, 0,
	178, 180, 425, -2, 52, 114, 39, 0, 0, 78,
	0, 93, 304, 318, 0, 322, 146, 210, 213, 0,
	0, 215, 177, 0, 181, 182, 0, 0, 190, 0,
	0, -2, 0, 305, 0, 39, 319, 0, 0, 214,
	-2, 179, 183, 184, 185, 0, 194, 0, 0, 117,
	0, 320, 211, 0, 186, 187, 0, -2, 191, 115,
	80, 0, 0, 192, 76, 79, 81, 0, 174, 196,
	39, 188, 82, 0, 0, 0, 197, 0, 0, 39,
	0, 83,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 154, 140, 3, 157, 164, 151, 3,
	146, 147, 162, 153, 158, 152, 167, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 145, 144,
	165, 160, 166, 150, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 148, 3, 149, 161, 3, 141, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 159, 143, 155,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:268
		{
			yylex.(*Parser).rootNode = stmt.NewStmtList(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yylex.(*Parser).rootNode, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:276
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:281
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:286
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			yylex.(*Parser).comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:293
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			yylex.(*Parser).comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:303
		{
			// error
			yyVAL.node = nil
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:308
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:310
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:312
		{
			yyVAL.node = yyDollar[1].node
		}
	case 10:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:314
		{
			yyVAL.node = stmt.NewHaltCompiler()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:320
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:330
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:340
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:346
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:352
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:362
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:372
		{
			yyVAL.node = yyDollar[1].node
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:377
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:379
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:384
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:394
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:407
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:417
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:433
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:435
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:440
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:450
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:463
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:473
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:489
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:491
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:496
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:506
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:519
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:529
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:545
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:561
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:580
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:586
		{
			yyVAL.list = []node.Node{}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:592
		{
			// error
			yyVAL.node = nil
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:597
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:599
		{
			yyVAL.node = yyDollar[1].node
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:601
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:603
		{
			yyVAL.node = stmt.NewHaltCompiler()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:613
		{
			yyVAL.node = yyDollar[1].node
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:615
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			yylex.(*Parser).comments.AddComments(label, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:628
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:634
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:648
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewAltIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:657
		{
			if yyDollar[3].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltWhile(yyDollar[2].node, yyDollar[3].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewWhile(yyDollar[2].node, yyDollar[3].altSyntaxNode.node)
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].altSyntaxNode.node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:667
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:673
		{
			if yyDollar[9].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].altSyntaxNode.node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:683
		{
			if yyDollar[3].nodesWithEndToken.endToken.Value == ";" {
				yyVAL.node = stmt.NewAltSwitch(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			} else {
				yyVAL.node = stmt.NewSwitch(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:693
		{
			yyVAL.node = stmt.NewBreak(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:699
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:705
		{
			yyVAL.node = stmt.NewContinue(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:711
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:717
		{
			yyVAL.node = stmt.NewReturn(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:723
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:729
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:735
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:741
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:747
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:753
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:759
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:765
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:771
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:777
		{
			if yyDollar[6].foreachVariable.node == nil {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				}
			} else {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				}
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].altSyntaxNode.node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:795
		{
			if yyDollar[6].foreachVariable.node == nil {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				}
			} else {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				}
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].altSyntaxNode.node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:813
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:819
		{
			yyVAL.node = stmt.NewNop()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:825
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:837
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:843
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(label, yyDollar[2].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:856
		{
			yyVAL.list = []node.Node{}
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:858
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())

			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			yylex.(*Parser).positions.AddPosition(catch, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			yylex.(*Parser).comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:876
		{
			yyVAL.node = nil
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:878
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:887
		{
			yyVAL.list = yyDollar[1].list
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:889
		{
			yyVAL.list = []node.Node{}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:894
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:896
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:901
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:918
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:920
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:925
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:930
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:935
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:940
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:942
		{
			yyVAL.boolWithToken = boolWithToken{true, yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:947
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:949
		{
			yyVAL.boolWithToken = boolWithToken{true, yyDollar[1].token}
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:954
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[5].list, nil, yyDollar[8].list, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:967
		{
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				name := node.NewIdentifier(yyDollar[2].token.Value)
				yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].list

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				name := node.NewIdentifier(yyDollar[2].token.Value)
				yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}

			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:988
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[5].list, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1002
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1008
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1018
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1024
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1037
		{
			yyVAL.node = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1039
		{
			yyVAL.node = yyDollar[2].node
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1044
		{
			yyVAL.token = yyDollar[1].token
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1049
		{
			yyVAL.list = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1051
		{
			yyVAL.list = yyDollar[2].list
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1056
		{
			yyVAL.list = nil
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1058
		{
			yyVAL.list = yyDollar[2].list
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1063
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1065
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1070
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1072
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1077
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1079
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1081
		{
			list := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			yylex.(*Parser).comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1091
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1093
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			yylex.(*Parser).positions.AddPosition(yyVAL.altSyntaxNode.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1102
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1104
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			yylex.(*Parser).positions.AddPosition(yyVAL.altSyntaxNode.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1113
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1115
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1125
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1137
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1153
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1155
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1157
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1159
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1165
		{
			yyVAL.list = []node.Node{}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1167
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			yylex.(*Parser).positions.AddPosition(_case, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			yylex.(*Parser).comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1174
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			yylex.(*Parser).positions.AddPosition(_default, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			yylex.(*Parser).comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1191
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1193
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			yylex.(*Parser).positions.AddPosition(yyVAL.altSyntaxNode.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1203
		{
			yyVAL.list = nil
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1205
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1217
		{
			yyVAL.list = nil
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1219
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yylex.(*Parser).comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1234
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1236
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1246
		{
			yyVAL.node = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1248
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1261
		{
			yyVAL.list = yyDollar[1].list
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1263
		{
			yyVAL.list = nil
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1268
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1270
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1275
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].boolWithToken.token, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].boolWithToken.token, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1301
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].boolWithToken.token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].boolWithToken.token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1331
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1333
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1339
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1351
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1353
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1355
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			yylex.(*Parser).positions.AddPosition(arg, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(arg, yylex.(*Parser).comments[yyDollar[2].node])

			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{arg}, yyDollar[3].token}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1367
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1369
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1374
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1380
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1386
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1392
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1401
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1403
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1409
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1419
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1425
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1435
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1452
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1469
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1486
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1508
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1510
		{
			yyVAL.list = []node.Node{}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1516
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1522
		{
			yyVAL.node = yyDollar[1].node
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1524
		{
			yyVAL.node = yyDollar[1].node
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1526
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[6].list, nil, yyDollar[8].nodesWithEndToken.nodes, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[8].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1539
		{
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, yyDollar[3].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1548
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1550
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1555
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1557
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1562
		{
			yyVAL.list = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1564
		{
			yyVAL.list = yyDollar[1].list
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1569
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1571
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1576
		{
			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1578
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1583
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1592
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1594
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1599
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1609
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1614
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1627
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1637
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1646
		{
			yyVAL.node = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1648
		{
			yyVAL.node = yyDollar[1].node
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1653
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1655
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1660
		{
			yyVAL.list = yyDollar[1].list
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1662
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(modifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(modifier, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{modifier}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1673
		{
			yyVAL.list = nil
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1675
		{
			yyVAL.list = yyDollar[1].list
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1680
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1682
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1687
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1693
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1699
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1705
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1711
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1717
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1726
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1742
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1758
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1774
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1793
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			yyDollar[1].node.(*stmt.ClassConstList).Consts = append(yyDollar[1].node.(*stmt.ClassConstList).Consts, constant)
			yylex.(*Parser).positions.AddPosition(yyDollar[1].node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1808
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1825
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1827
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1833
		{
			yyVAL.list = nil
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1835
		{
			yyVAL.list = yyDollar[1].list
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1840
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1842
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1847
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1849
		{
			yyVAL.list = yyDollar[1].list
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1854
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1861
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1871
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1873
		{
			yyVAL.list = yyDollar[1].list
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1875
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1880
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1882
		{
			yyVAL.list = yyDollar[1].list
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1887
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1902
		{
			list := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			yylex.(*Parser).comments.AddComments(list, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1912
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1918
		{
			yyVAL.node = assign.NewReference(yyDollar[1].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1924
		{
			_new := expr.NewNew(yyDollar[5].node, nil)
			yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node))

			if yyDollar[6].nodesWithEndToken != nil {
				_new = expr.NewNew(yyDollar[5].node, yyDollar[6].nodesWithEndToken.nodes)
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[4].token, yyDollar[6].nodesWithEndToken.endToken))
			}
			yylex.(*Parser).comments.AddComments(_new, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.node = assign.NewReference(yyDollar[1].node, _new)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, _new))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1939
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1945
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1951
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1957
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1963
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1969
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1975
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1981
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1987
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1993
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1999
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2005
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2011
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2017
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2023
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2029
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2035
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2041
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2047
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2053
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2059
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2065
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2071
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2077
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2083
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2089
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2095
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2101
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2107
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2113
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2119
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2125
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2131
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2137
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2143
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2149
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2155
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2161
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2167
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2173
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2179
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2185
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2191
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2197
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2203
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2209
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2215
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2221
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2223
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2225
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn
				}
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2251
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2257
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2263
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2265
		{
			yyVAL.node = cast.NewInt(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2271
		{
			yyVAL.node = cast.NewDouble(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2277
		{
			yyVAL.node = cast.NewString(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2283
		{
			yyVAL.node = cast.NewArray(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2289
		{
			yyVAL.node = cast.NewObject(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2295
		{
			yyVAL.node = cast.NewBool(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2301
		{
			yyVAL.node = cast.NewUnset(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2307
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(yyDollar[2].node)
			} else {
				yyVAL.node = expr.NewExit(yyDollar[2].node)
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2317
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2323
		{
			yyVAL.node = yyDollar[1].node
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2325
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2327
		{
			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2329
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2335
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2341
		{
			yyVAL.node = expr.NewYield(nil, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:2347
		{
			yyVAL.node = expr.NewClosure(yyDollar[4].list, yyDollar[6].list, nil, yyDollar[8].list, false, yyDollar[2].boolWithToken.value, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:2354
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].list, nil, yyDollar[9].list, true, yyDollar[3].boolWithToken.value, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2364
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2370
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2376
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2382
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2391
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2397
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2403
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(str, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[str])
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2413
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2422
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2428
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2437
		{
			yyVAL.token = yyDollar[1].token
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2442
		{
			yyVAL.list = []node.Node{}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2444
		{
			yyVAL.list = yyDollar[3].list
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2449
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClosureUse(variable, false)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2465
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClosureUse(variable, true)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2481
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClosureUse(variable, false)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2497
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[2].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClosureUse(variable, true)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2516
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(name, yyDollar[2].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2526
		{
			funcName := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(funcName, yyDollar[4].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[funcName])
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2536
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(funcName, yyDollar[3].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[funcName])
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2546
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2552
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2558
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2564
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2570
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2579
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2585
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2591
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2597
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2606
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2612
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2618
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2627
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2629
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2634
		{
			yyVAL.node = yyDollar[1].node

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2670
		{
			yyVAL.node = yyDollar[1].node
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2676
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2678
		{
			yyVAL.list = []node.Node{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2684
		{
			yyVAL.list = yyDollar[2].list
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2689
		{
			yyVAL.node = nil
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2691
		{
			yyVAL.node = nil
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2693
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2698
		{
			yyVAL.list = []node.Node{}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2700
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2702
		{
			yyVAL.list = yyDollar[1].list
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2707
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2709
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2714
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2720
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2726
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2732
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2738
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2744
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2750
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2756
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2762
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2768
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2774
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[2].token.Comments())

			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, []node.Node{encapsed})
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2784
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2793
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2806
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2811
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2815
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2825
		{
			name := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2835
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2845
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2851
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2857
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2859
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2865
		{
			yyVAL.node = yyDollar[1].node
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2870
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2876
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2882
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2888
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2894
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2900
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2906
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2912
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2918
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2924
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2930
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2936
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2942
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2948
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2954
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2960
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2966
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2972
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2978
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2984
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2990
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2996
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3002
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3008
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3014
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3020
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3026
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3032
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3038
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3044
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3050
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3056
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3062
		{
			yyVAL.node = yyDollar[2].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3067
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3069
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3079
		{
			name := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3089
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3102
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3112
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3114
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3116
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3118
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3124
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3130
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3139
		{
			yyVAL.list = nil
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3141
		{
			yyVAL.list = yyDollar[1].list
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3151
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3159
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3167
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3175
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3186
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3188
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3193
		{
			yyVAL.node = yyDollar[2].node
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3195
		{
			yyVAL.node = yyDollar[2].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3201
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3207
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3212
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3217
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3270
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3275
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3277
		{
			yyVAL.list = []node.Node{}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3283
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3295
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3302
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = []node.Node{yyDollar[1].node, fetch}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3312
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].nodesWithEndToken.nodes)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].nodesWithEndToken.nodes, yyDollar[1].nodesWithEndToken.endToken))
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3320
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3322
		{
			yyVAL.list = yyDollar[1].list
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3324
		{
			yyVAL.list = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3329
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3331
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3344
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3350
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3360
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3365
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3371
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3379
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3380
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3381
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3387
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3389
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3399
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3404
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3410
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3416
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3422
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3432
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3441
		{
			yyVAL.node = nil
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3443
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3449
		{
			yyVAL.list = yyDollar[1].list
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3451
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3461
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3468
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3475
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3485
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3491
		{
			yyVAL.node = yyDollar[2].node
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3496
		{
			n := expr.NewVariable(nil)
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3504
		{
			n := expr.NewVariable(nil)
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3519
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3521
		{
			if yyDollar[1].node == nil {
				yyVAL.list = []node.Node{}
			} else {
				yyVAL.list = []node.Node{yyDollar[1].node}
			}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3533
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3539
		{
			item := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(item, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(item, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayItem(nil, item, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(item))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[item])
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3549
		{
			yyVAL.node = nil
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3555
		{
			yyVAL.list = []node.Node{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3557
		{
			yyVAL.list = yyDollar[1].list
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3562
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3570
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3578
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3586
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3594
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3602
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3610
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3618
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3629
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3631
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3638
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3640
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3650
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3660
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3673
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(fetch, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3689
		{
			yyVAL.node = yyDollar[2].node
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3695
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[2].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3709
		{
			yyVAL.node = yyDollar[2].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3714
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3720
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3732
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3745
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3751
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3757
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3763
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3769
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3775
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3781
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3787
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3796
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3798
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3803
		{
			yyVAL.node = yyDollar[1].node
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3805
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3810
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3820
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3833
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3846
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
