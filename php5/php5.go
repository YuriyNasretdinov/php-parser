//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/scanner"
)

//line php5/php5.y:21
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   *scanner.Token
	list                    []node.Node
	simpleIndirectReference simpleIndirectReference

	ClassExtends     *stmt.ClassExtends
	ClassImplements  *stmt.ClassImplements
	InterfaceExtends *stmt.InterfaceExtends
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:4118

type simpleIndirectReference struct {
	all  []*expr.Variable
	last *expr.Variable
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 51,
	104, 435,
	105, 435,
	-2, 433,
	-1, 102,
	78, 332,
	-2, 411,
	-1, 114,
	78, 451,
	123, 447,
	-2, 457,
	-1, 154,
	104, 435,
	105, 435,
	-2, 433,
	-1, 204,
	121, 306,
	124, 306,
	-2, 430,
	-1, 205,
	104, 435,
	105, 435,
	121, 307,
	124, 307,
	-2, 433,
	-1, 271,
	78, 451,
	-2, 457,
	-1, 298,
	78, 334,
	-2, 413,
	-1, 302,
	123, 448,
	-2, 458,
	-1, 311,
	78, 333,
	-2, 412,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 274,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 275,
	-1, 380,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 276,
	-1, 381,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 277,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 278,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 279,
	-1, 384,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 280,
	-1, 385,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 281,
	-1, 392,
	104, 435,
	105, 435,
	-2, 433,
	-1, 400,
	124, 142,
	-2, 147,
	-1, 462,
	104, 435,
	105, 435,
	124, 514,
	135, 514,
	-2, 433,
	-1, 463,
	124, 515,
	135, 515,
	-2, 430,
	-1, 464,
	104, 435,
	105, 435,
	-2, 433,
	-1, 486,
	124, 156,
	135, 156,
	-2, 430,
	-1, 487,
	104, 435,
	105, 435,
	124, 157,
	135, 157,
	-2, 433,
	-1, 493,
	123, 472,
	-2, 516,
	-1, 499,
	123, 472,
	-2, 517,
	-1, 521,
	78, 332,
	-2, 369,
	-1, 539,
	93, 135,
	94, 135,
	95, 135,
	-2, 0,
	-1, 551,
	124, 142,
	-2, 147,
	-1, 564,
	124, 142,
	-2, 147,
	-1, 581,
	121, 308,
	124, 308,
	-2, 430,
	-1, 582,
	104, 435,
	105, 435,
	121, 309,
	124, 309,
	-2, 433,
	-1, 681,
	78, 334,
	-2, 371,
	-1, 779,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 397,
	-1, 780,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 398,
	-1, 781,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 399,
	-1, 782,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 400,
	-1, 783,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 401,
	-1, 784,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 402,
	-1, 785,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 403,
	-1, 786,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 404,
	-1, 789,
	78, 333,
	-2, 370,
	-1, 839,
	37, 201,
	-2, 198,
	-1, 879,
	31, 128,
	32, 128,
	33, 128,
	120, 128,
	-2, 0,
	-1, 914,
	95, 140,
	-2, 0,
	-1, 916,
	31, 127,
	32, 127,
	33, 127,
	120, 127,
	-2, 0,
	-1, 943,
	93, 136,
	94, 136,
	95, 136,
	-2, 0,
	-1, 971,
	29, 189,
	-2, 4,
	-1, 980,
	124, 142,
	-2, 147,
	-1, 997,
	121, 193,
	-2, 195,
}

const yyPrivate = 57344

const yyLast = 8512

var yyAct = [...]int{

	102, 571, 843, 565, 1006, 965, 714, 807, 420, 826,
	123, 131, 606, 200, 340, 918, 734, 567, 452, 815,
	474, 683, 296, 594, 461, 592, 421, 61, 579, 142,
	319, 315, 39, 98, 264, 390, 158, 517, 130, 2,
	444, 115, 289, 192, 653, 118, 138, 140, 447, 544,
	145, 485, 179, 653, 978, 1002, 228, 228, 162, 477,
	941, 331, 940, 43, 7, 493, 959, 121, 330, 937,
	934, 6, 931, 26, 821, 932, 939, 450, 499, 121,
	121, 267, 44, 656, 658, 659, 657, 953, 432, 933,
	921, 897, 853, 737, 192, 657, 709, 562, 954, 632,
	251, 586, 618, 586, 298, 898, 735, 494, 153, 516,
	633, 653, 585, 619, 270, 655, 654, 137, 358, 325,
	179, 560, 272, 586, 793, 204, 311, 556, 510, 316,
	320, 728, 561, 323, 114, 258, 329, 241, 557, 5,
	506, 305, 511, 675, 677, 676, 678, 663, 664, 665,
	656, 658, 659, 657, 507, 543, 339, 141, 653, 359,
	121, 228, 655, 654, 310, 475, 355, 39, 178, 180,
	181, 179, 121, 360, 451, 159, 357, 350, 312, 162,
	356, 201, 1018, 976, 929, 907, 451, 451, 906, 120,
	192, 351, 313, 267, 133, 228, 665, 656, 658, 659,
	657, 120, 120, 904, 117, 861, 855, 653, 134, 791,
	661, 655, 654, 241, 745, 271, 653, 104, 595, 639,
	655, 654, 301, 228, 352, 631, 270, 386, 300, 177,
	176, 425, 630, 624, 272, 673, 674, 671, 672, 675,
	677, 676, 678, 663, 664, 665, 656, 658, 659, 657,
	302, 623, 663, 664, 665, 656, 658, 659, 657, 597,
	232, 232, 228, 175, 178, 180, 181, 179, 596, 595,
	456, 473, 749, 231, 231, 333, 440, 336, 393, 748,
	604, 294, 120, 611, 293, 273, 740, 453, 295, 610,
	287, 281, 254, 228, 303, 253, 399, 160, 265, 977,
	930, 1001, 950, 915, 885, 449, 882, 870, 825, 446,
	814, 727, 693, 634, 131, 396, 625, 621, 509, 430,
	428, 490, 513, 307, 241, 1013, 521, 271, 980, 297,
	892, 472, 139, 297, 504, 999, 824, 593, 818, 682,
	39, 449, 913, 434, 439, 492, 449, 587, 491, 502,
	498, 564, 505, 497, 809, 808, 876, 463, 465, 521,
	551, 126, 400, 121, 537, 232, 541, 288, 278, 275,
	467, 484, 7, 274, 344, 250, 471, 345, 231, 6,
	486, 222, 479, 480, 196, 195, 194, 144, 548, 495,
	122, 135, 436, 437, 989, 546, 552, 273, 448, 232,
	1010, 572, 1009, 572, 577, 572, 580, 458, 228, 400,
	265, 984, 231, 983, 126, 923, 121, 912, 437, 436,
	436, 126, 437, 121, 880, 588, 39, 232, 703, 704,
	229, 703, 704, 230, 448, 811, 805, 804, 798, 448,
	231, 295, 584, 712, 699, 547, 545, 5, 490, 233,
	542, 501, 539, 398, 348, 540, 615, 156, 981, 126,
	905, 121, 605, 423, 1019, 975, 232, 609, 449, 449,
	874, 917, 492, 498, 891, 491, 497, 890, 309, 231,
	308, 126, 888, 229, 732, 120, 230, 578, 581, 228,
	229, 306, 197, 230, 435, 830, 449, 232, 616, 449,
	614, 449, 233, 446, 295, 617, 224, 225, 316, 233,
	231, 987, 320, 257, 637, 638, 810, 521, 730, 702,
	641, 642, 802, 803, 681, 680, 521, 455, 229, 126,
	353, 230, 39, 521, 521, 521, 521, 521, 120, 645,
	695, 696, 648, 531, 259, 120, 650, 233, 635, 438,
	126, 647, 572, 125, 652, 710, 424, 700, 228, 228,
	228, 448, 448, 521, 7, 572, 718, 125, 726, 39,
	39, 6, 91, 126, 971, 731, 531, 572, 580, 569,
	570, 126, 729, 120, 612, 267, 687, 228, 228, 448,
	124, 459, 448, 713, 448, 705, 739, 707, 573, 295,
	723, 574, 454, 427, 295, 733, 282, 286, 260, 261,
	469, 504, 232, 738, 426, 304, 742, 741, 270, 736,
	126, 299, 321, 126, 816, 231, 272, 864, 228, 595,
	228, 518, 686, 515, 62, 512, 744, 449, 508, 5,
	457, 446, 573, 573, 754, 574, 574, 128, 129, 468,
	322, 54, 263, 317, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 789, 743, 521, 576, 758, 295, 756, 295, 757,
	285, 295, 132, 232, 404, 132, 259, 720, 239, 750,
	402, 438, 463, 295, 790, 792, 231, 226, 234, 259,
	521, 208, 126, 207, 121, 985, 486, 228, 259, 271,
	827, 823, 259, 799, 795, 45, 1007, 438, 725, 572,
	448, 831, 986, 163, 531, 1017, 572, 850, 819, 338,
	812, 703, 704, 531, 559, 991, 828, 813, 957, 832,
	531, 531, 531, 531, 531, 851, 955, 856, 45, 453,
	260, 261, 232, 232, 232, 742, 796, 609, 706, 703,
	704, 858, 469, 260, 261, 231, 231, 231, 925, 896,
	531, 268, 260, 261, 269, 470, 260, 261, 521, 273,
	893, 232, 232, 259, 521, 521, 550, 1003, 284, 998,
	233, 960, 265, 935, 231, 231, 847, 848, 849, 846,
	845, 844, 901, 599, 878, 601, 600, 228, 126, 228,
	877, 760, 521, 883, 881, 572, 889, 884, 759, 854,
	875, 722, 232, 800, 232, 651, 120, 859, 860, 820,
	649, 646, 900, 572, 903, 231, 602, 231, 514, 481,
	39, 395, 324, 203, 202, 841, 285, 260, 261, 887,
	199, 842, 136, 1, 840, 829, 747, 228, 899, 753,
	521, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 519, 259,
	531, 922, 863, 259, 283, 908, 449, 445, 256, 39,
	446, 608, 521, 936, 589, 847, 848, 849, 846, 845,
	844, 232, 590, 591, 684, 879, 909, 531, 255, 839,
	994, 519, 521, 964, 231, 521, 873, 894, 521, 963,
	572, 962, 572, 970, 39, 902, 39, 483, 895, 838,
	835, 566, 1005, 192, 39, 1004, 39, 39, 724, 394,
	521, 389, 164, 260, 261, 572, 970, 260, 261, 956,
	982, 341, 958, 39, 697, 961, 538, 39, 39, 521,
	928, 572, 290, 460, 993, 161, 572, 995, 157, 997,
	318, 314, 177, 176, 914, 127, 916, 979, 403, 448,
	575, 401, 39, 572, 1011, 531, 924, 335, 926, 927,
	1012, 531, 531, 944, 572, 1015, 992, 1008, 343, 919,
	39, 232, 919, 232, 182, 183, 175, 178, 180, 181,
	179, 943, 938, 528, 231, 947, 231, 607, 948, 531,
	996, 969, 968, 192, 39, 967, 966, 837, 836, 834,
	39, 40, 945, 568, 15, 14, 822, 719, 801, 694,
	11, 841, 249, 75, 972, 76, 116, 842, 266, 64,
	840, 232, 89, 598, 90, 520, 101, 74, 12, 326,
	100, 99, 177, 176, 231, 79, 119, 531, 526, 519,
	3, 41, 0, 990, 0, 0, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 519, 519, 519, 519, 519,
	188, 189, 190, 191, 182, 183, 175, 178, 180, 181,
	179, 847, 848, 849, 846, 845, 844, 0, 1014, 531,
	0, 0, 0, 0, 0, 519, 0, 1020, 169, 171,
	170, 192, 0, 833, 0, 0, 0, 0, 0, 531,
	558, 0, 531, 0, 0, 531, 0, 685, 0, 0,
	0, 0, 0, 0, 688, 689, 690, 691, 692, 0,
	620, 0, 809, 808, 0, 0, 0, 531, 193, 173,
	177, 176, 209, 210, 211, 212, 214, 215, 216, 217,
	218, 219, 220, 221, 213, 0, 531, 0, 0, 0,
	167, 168, 172, 174, 186, 187, 184, 185, 188, 189,
	190, 191, 182, 183, 175, 178, 180, 181, 179, 0,
	0, 0, 0, 0, 0, 0, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 0, 0, 519, 0, 209, 210, 211,
	212, 214, 215, 216, 217, 218, 219, 220, 221, 213,
	0, 0, 0, 0, 0, 0, 0, 668, 666, 667,
	0, 0, 519, 0, 0, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 788, 869, 0, 685, 653, 0, 679, 661, 655,
	654, 209, 210, 211, 212, 214, 215, 216, 217, 218,
	219, 220, 221, 213, 0, 0, 0, 0, 0, 670,
	669, 660, 662, 673, 674, 671, 672, 675, 677, 676,
	678, 663, 664, 665, 656, 658, 659, 657, 0, 0,
	519, 0, 0, 0, 0, 0, 519, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 31, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 209, 210, 211, 212, 214,
	215, 216, 217, 218, 219, 220, 221, 213, 0, 147,
	151, 155, 0, 0, 0, 165, 0, 0, 0, 868,
	0, 0, 51, 198, 0, 871, 872, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 519, 235, 236, 237, 238, 0, 154, 240,
	0, 242, 243, 244, 245, 246, 247, 248, 653, 252,
	0, 661, 655, 654, 262, 205, 0, 0, 0, 276,
	277, 0, 279, 280, 0, 0, 0, 0, 227, 227,
	0, 0, 0, 291, 519, 662, 673, 674, 671, 672,
	675, 677, 676, 678, 663, 664, 665, 656, 658, 659,
	657, 910, 0, 0, 519, 0, 0, 519, 0, 0,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	342, 0, 519, 0, 0, 0, 0, 0, 0, 126,
	0, 121, 0, 942, 0, 0, 0, 0, 0, 0,
	0, 519, 0, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 387,
	0, 155, 0, 354, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 406, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 229, 0,
	0, 230, 0, 0, 0, 0, 0, 391, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 433,
	433, 0, 0, 0, 0, 422, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	155, 155, 0, 120, 466, 0, 0, 433, 0, 0,
	0, 0, 0, 433, 291, 0, 0, 0, 0, 433,
	433, 0, 0, 155, 443, 0, 433, 496, 0, 0,
	0, 0, 500, 0, 0, 0, 653, 462, 464, 661,
	655, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	487, 669, 660, 662, 673, 674, 671, 672, 675, 677,
	676, 678, 663, 664, 665, 656, 658, 659, 657, 549,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 555, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 155, 0, 23, 24, 38, 45, 16, 25, 36,
	0, 0, 37, 10, 0, 27, 0, 32, 81, 82,
	8, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 582, 0,
	583, 0, 0, 93, 0, 0, 0, 613, 9, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 626, 628, 55, 56, 911, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 636, 92, 77, 17, 644,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 668, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 653, 0, 0, 0, 655, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 701,
	0, 0, 653, 0, 679, 661, 655, 654, 0, 0,
	711, 673, 674, 671, 672, 675, 677, 676, 678, 663,
	664, 665, 656, 658, 659, 657, 670, 669, 660, 662,
	673, 674, 671, 672, 675, 677, 676, 678, 663, 664,
	665, 656, 658, 659, 657, 0, 0, 0, 0, 433,
	391, 715, 715, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 0, 0, 433, 751, 668, 666,
	667, 0, 0, 0, 0, 155, 0, 0, 0, 422,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 867, 679, 661,
	655, 654, 462, 666, 667, 0, 0, 0, 0, 0,
	478, 0, 478, 0, 0, 0, 487, 0, 0, 0,
	670, 669, 660, 662, 673, 674, 671, 672, 675, 677,
	676, 678, 663, 664, 665, 656, 658, 659, 657, 0,
	653, 0, 679, 661, 655, 654, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 669, 660, 662, 673, 674,
	671, 672, 675, 677, 676, 678, 663, 664, 665, 656,
	658, 659, 657, 852, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 433, 433, 0, 0, 0, 817,
	0, 865, 0, 0, 0, 0, 0, 0, 4, 0,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 16, 25, 36, 0, 0, 37,
	10, 342, 27, 0, 32, 81, 82, 8, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 9, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 715,
	0, 422, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 92, 77, 17, 503, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 0, 0, 0, 0, 0, 0, 4, 478,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 16, 25, 36, 0, 0, 37,
	10, 0, 27, 0, 32, 81, 82, 8, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 9, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 92, 77, 17, 1021,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 328, 0, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 332, 46, 48, 50, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 47, 49, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 92,
	77, 17, 1016, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 92, 77, 17, 1000, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	328, 0, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 0, 0, 95, 29, 20, 19,
	0, 21, 988, 33, 0, 34, 0, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 332,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 974, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 92, 77,
	17, 0, 35, 0, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 328, 0, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 25, 36, 0, 0, 37, 0, 0,
	27, 0, 32, 81, 82, 332, 46, 48, 50, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 47, 49, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 92, 77, 17, 973, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 92, 77, 17, 952, 35, 0,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 328, 0, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 332, 46, 48, 50, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 47,
	49, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 92, 77, 17,
	951, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	92, 77, 17, 949, 35, 0, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 328, 0,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 886, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 25, 36, 0, 0, 37,
	0, 0, 27, 0, 32, 81, 82, 332, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 698, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 92, 77, 17, 0,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 328, 0, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 332, 46, 48, 50, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 47, 49, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 92,
	77, 17, 563, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 92, 77, 17, 327, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	328, 0, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 0, 0, 95, 29, 20, 19,
	0, 21, 0, 33, 0, 34, 0, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 332,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 92, 77, 17, 0,
	35, 946, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 92, 77, 17,
	0, 35, 920, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 92, 77,
	17, 0, 35, 721, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 92,
	77, 17, 0, 35, 337, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	92, 77, 17, 0, 35, 334, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 25, 36, 0, 0, 37, 0, 0,
	27, 0, 32, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 192, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 92, 77, 17, 0, 35, 0, 63, 0, 97,
	173, 177, 176, 58, 57, 59, 60, 73, 120, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 169, 171, 170, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	0, 0, 857, 193, 173, 177, 176, 668, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 167, 168, 172, 174, 186,
	187, 184, 185, 188, 189, 190, 191, 182, 183, 175,
	178, 180, 181, 179, 797, 653, 0, 679, 661, 655,
	654, 668, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 0, 0, 670,
	669, 660, 662, 673, 674, 671, 672, 675, 677, 676,
	678, 663, 664, 665, 656, 658, 659, 657, 0, 653,
	0, 679, 661, 655, 654, 169, 171, 170, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 669, 660, 662, 673, 674, 671,
	672, 675, 677, 676, 678, 663, 664, 665, 656, 658,
	659, 657, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 169, 171, 170, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 172,
	174, 186, 187, 184, 185, 188, 189, 190, 191, 182,
	183, 175, 178, 180, 181, 179, 752, 0, 0, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 169, 171, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 172, 174, 186,
	187, 184, 185, 188, 189, 190, 191, 182, 183, 175,
	178, 180, 181, 179, 708, 0, 0, 0, 0, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 172, 174, 186, 187, 184,
	185, 188, 189, 190, 191, 182, 183, 175, 178, 180,
	181, 179, 643, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 169, 171, 170,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	640, 0, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 169, 171, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	168, 172, 174, 186, 187, 184, 185, 188, 189, 190,
	191, 182, 183, 175, 178, 180, 181, 179, 622, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 172, 174, 186, 187, 184,
	185, 188, 189, 190, 191, 182, 183, 175, 178, 180,
	181, 179, 603, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 169, 171, 170, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 167, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	554, 0, 0, 0, 0, 193, 173, 177, 176, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 172,
	174, 186, 187, 184, 185, 188, 189, 190, 191, 182,
	183, 175, 178, 180, 181, 179, 0, 0, 0, 193,
	173, 177, 176, 169, 171, 170, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 167, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	429, 0, 0, 193, 173, 177, 176, 169, 171, 170,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 172, 174, 186,
	187, 184, 185, 188, 189, 190, 191, 182, 183, 175,
	178, 180, 181, 179, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 169, 171, 170, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	168, 172, 174, 186, 187, 184, 185, 188, 189, 190,
	191, 182, 183, 175, 178, 180, 181, 179, 397, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 169, 171, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 168, 172, 174,
	186, 187, 184, 185, 188, 189, 190, 191, 182, 183,
	175, 178, 180, 181, 179, 347, 0, 0, 0, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 169, 171,
	170, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 172, 174, 186, 187, 184,
	185, 188, 189, 190, 191, 182, 183, 175, 178, 180,
	181, 179, 346, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 169, 171, 170, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 168, 172, 174, 186, 187, 184, 185, 188, 189,
	190, 191, 182, 183, 175, 178, 180, 181, 179, 166,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 668,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 172,
	174, 186, 187, 184, 185, 188, 189, 190, 191, 182,
	183, 175, 178, 180, 181, 179, 0, 653, 0, 679,
	661, 655, 654, 169, 171, 170, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 669, 660, 662, 673, 674, 671, 672, 675,
	677, 676, 678, 663, 664, 665, 656, 658, 659, 657,
	0, 0, 0, 193, 173, 177, 176, 171, 170, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 172, 174, 186,
	187, 184, 185, 188, 189, 190, 191, 182, 183, 175,
	178, 180, 181, 179, 0, 0, 193, 173, 177, 176,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	172, 174, 186, 187, 184, 185, 188, 189, 190, 191,
	182, 183, 175, 178, 180, 181, 179, 653, 0, 679,
	661, 655, 654, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 669, 660, 662, 673, 674, 671, 672, 675,
	677, 676, 678, 663, 664, 665, 656, 658, 659, 657,
	0, 193, 173, 177, 176, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 172, 174, 186, 187, 184,
	185, 188, 189, 190, 191, 182, 183, 175, 178, 180,
	181, 179, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 172, 174, 186, 187,
	184, 185, 188, 189, 190, 191, 182, 183, 175, 178,
	180, 181, 179, 653, 0, 679, 661, 655, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 669, 660,
	662, 673, 674, 671, 672, 675, 677, 676, 678, 663,
	664, 665, 656, 658, 659, 657, 653, 0, 0, 661,
	655, 654, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 669, 660, 662, 673, 674, 671, 672, 675, 677,
	676, 678, 663, 664, 665, 656, 658, 659, 657, 0,
	173, 177, 176, 0, 0, 0, 0, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 168, 172, 174, 186, 187, 184, 185, 188,
	189, 190, 191, 182, 183, 175, 178, 180, 181, 179,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 489, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 653,
	92, 77, 661, 655, 654, 0, 63, 482, 97, 0,
	0, 488, 58, 57, 59, 60, 73, 120, 0, 0,
	0, 0, 0, 0, 0, 660, 662, 673, 674, 671,
	672, 675, 677, 676, 678, 663, 664, 665, 656, 658,
	659, 657, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 192, 0, 0, 143, 113, 109,
	103, 489, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 148, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 173, 177, 176, 92, 77, 0, 0, 0,
	0, 63, 0, 97, 0, 0, 488, 58, 57, 59,
	60, 73, 120, 0, 0, 172, 174, 186, 187, 184,
	185, 188, 189, 190, 191, 182, 183, 175, 178, 180,
	181, 179, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 192, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 148, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 0, 97, 177, 176, 866, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 0, 105, 106, 126,
	88, 121, 0, 0, 0, 0, 0, 95, 186, 187,
	184, 185, 188, 189, 190, 191, 182, 183, 175, 178,
	180, 181, 179, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 148, 149, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 92, 77, 0, 0,
	0, 0, 63, 0, 97, 0, 0, 629, 58, 57,
	59, 60, 73, 120, 83, 84, 72, 0, 105, 106,
	126, 88, 121, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 192, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 148, 149, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 173, 177, 176, 92, 77, 0,
	0, 0, 0, 63, 0, 97, 0, 0, 627, 58,
	57, 59, 60, 73, 120, 0, 0, 0, 174, 186,
	187, 184, 185, 188, 189, 190, 191, 182, 183, 175,
	178, 180, 181, 179, 83, 84, 72, 0, 105, 106,
	126, 88, 121, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 148, 149, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 92, 77, 0,
	0, 0, 0, 63, 0, 97, 0, 0, 292, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 192,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 92, 77,
	0, 0, 0, 0, 63, 431, 97, 173, 177, 176,
	58, 57, 59, 60, 73, 120, 83, 84, 72, 0,
	105, 106, 126, 88, 121, 0, 0, 0, 0, 0,
	95, 0, 186, 187, 184, 185, 188, 189, 190, 191,
	182, 183, 175, 178, 180, 181, 179, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 148,
	149, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 92,
	77, 0, 0, 0, 0, 63, 0, 97, 0, 0,
	407, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	92, 77, 0, 0, 0, 388, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 83, 84,
	72, 0, 105, 106, 126, 88, 121, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 148, 149, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 92, 77, 0, 0, 152, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 92, 77, 0, 0, 150, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	83, 84, 72, 0, 105, 106, 126, 88, 121, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 148, 149, 0, 0, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 92, 77, 0, 0, 146, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 83, 84, 72, 0, 105, 106, 126, 88, 121,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 148, 149, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 92, 77, 0, 0, 0, 0,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 83, 84, 72, 0, 105, 106, 126, 442,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 148, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 0, 105, 106, 126,
	88, 121, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 105, 106, 126, 78, 42, 149, 0, 0,
	0, 0, 529, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 92, 77, 0, 0,
	0, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 527, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 522, 113, 109, 523, 105, 106, 126,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 536, 0, 525,
	0, 0, 0, 535, 534, 532, 533, 0, 0, 524,
	0, 527, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 522, 113,
	109, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 525, 0, 0, 0, 535, 534,
	532, 533,
}
var yyPact = [...]int{

	-1000, -1000, 2286, -1000, -1000, -1000, -1000, -1000, 267, 471,
	610, 73, -1000, 269, -1000, -1000, 852, -1000, 209, 209,
	4934, 264, 209, 7826, 7695, 7564, 336, 163, 721, 7957,
	-1000, 5808, 263, 262, 261, -1000, 373, 7957, 850, 53,
	844, 843, 7957, -1000, -1000, -1000, -1000, 661, -1000, 659,
	-1000, 1185, 258, 7957, 402, 449, 449, 7957, 7957, 7957,
	7957, -1000, -1000, 8219, -1000, 7957, 7957, 7957, 7957, 7957,
	7957, 7957, 252, 7957, -1000, 170, 167, 891, 7957, 595,
	702, 250, 246, 7957, 7957, 245, 7957, 7957, -1000, 166,
	-1000, -1000, 887, 781, -1000, 165, 244, 7040, -1000, 159,
	156, -1000, 206, 808, 543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 103, 160, -1000, 537, 210, -1000,
	372, -1000, 199, 359, -1000, 808, -1000, 57, 571, 540,
	-1000, 621, 808, -1000, 842, -1000, -17, 4015, 4803, 8219,
	4672, 718, 53, 485, 7957, 255, -1000, 5761, -1000, 688,
	-1000, 5714, -1000, 333, 1259, 5896, -1000, 56, -1000, -1000,
	411, 45, 53, -18, 38, 5896, -1000, 7957, 7957, 7957,
	7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957,
	7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957,
	7957, 7957, 702, 7433, 449, 7957, 841, -1000, 5667, 332,
	286, -1000, 645, 639, -1000, 1185, 5620, -1000, -1000, 7302,
	7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957, 7957,
	7957, 7957, 404, -1000, -1000, -1000, -1000, -1000, 206, 474,
	808, 536, 525, -1000, -1000, -115, -115, -47, -115, 196,
	5576, 195, -115, -115, -115, -115, -115, -115, -115, -1000,
	7171, -1000, -115, 7957, 7957, 376, 706, 684, -1000, 219,
	8088, 449, 6065, 67, 210, 524, -1000, 422, 445, 808,
	583, 103, 160, 513, 7957, 7957, 5896, 5896, 7957, 5896,
	5896, 7957, 532, 706, 697, -1000, 710, 7957, 7040, 145,
	30, 5532, 449, 7957, 7957, 839, -1000, 6323, 206, 55,
	7957, 7957, 103, 372, 68, -1000, 7957, 330, -1000, -1000,
	2146, 206, -1000, 613, 19, -1000, 609, 808, 7, -1000,
	606, 808, 838, 604, -27, 8379, -1000, -1000, -1000, -1000,
	-1000, -1000, 241, -1000, -1000, -1000, -1000, -1000, 209, 239,
	329, 20, 5896, -1000, 325, 324, -1000, -1000, -1000, -1000,
	-1000, 163, -1000, 7957, -1000, -1000, 784, 237, 8379, -1000,
	7957, 6192, 6464, 5939, 6065, 6024, 6876, 6625, 7169, 4,
	4, 4, -47, -115, -47, -47, 100, 100, 953, 953,
	953, 953, 863, 863, 863, 863, -1000, 5488, 7957, 3,
	-1000, -1000, 1121, 715, -3, -39, 3882, -1000, -1000, 228,
	519, 628, 563, 368, 563, 7957, 6065, 351, 6065, 6065,
	6065, 6065, 6065, 6065, 6065, 6065, 6065, 6065, 6065, 6065,
	-12, -1000, -1000, 224, 808, 206, 67, 67, 212, -1000,
	-1000, -1000, 142, 5896, 133, -1000, -1000, -1000, -1000, 803,
	836, 5442, 155, 342, 210, 164, -1000, -1000, 103, 160,
	-1000, 7957, -1000, -1000, 148, 808, 422, 67, 103, 148,
	-22, -1000, 1185, -1000, 1046, 193, 5394, 125, -1000, -1000,
	-1000, 107, 192, -1000, -1000, 6890, 6759, -1000, -1000, 106,
	99, -1000, -1000, -25, 189, -1000, -1000, 1185, 449, 7957,
	-1000, 210, 210, -1000, -1000, 93, 5350, 210, 210, -1000,
	5302, -1000, 1759, -1000, -1000, -1000, -1000, 571, 831, 522,
	-1000, 540, 830, 517, -1000, 825, 8379, -1000, 5852, -1000,
	-1000, 422, 443, 808, 216, 8379, -1000, -1000, -1000, -1000,
	615, 508, 8379, 8379, 8379, 8379, 8379, 188, 447, 4148,
	3749, 323, 7957, 7957, 399, -1000, 737, -1000, -1000, 5254,
	-40, 519, -1000, 5896, 7957, 4932, 322, 449, 1529, 1529,
	4541, 821, 8379, 687, 519, 187, -4, -1000, 53, -1000,
	-1000, -1000, 422, 436, 808, 365, 563, -1000, -1000, -29,
	-1000, -1000, 1185, -1000, 702, -43, 404, 404, 206, -1000,
	-1000, 161, 572, 7957, -1000, 67, -1000, -1000, 88, -1000,
	-1000, -1000, -1000, -1000, 7957, -1000, -1000, 154, 147, -1000,
	7957, 7957, 103, 5206, -1000, 422, -1000, -1000, -1000, 7957,
	-1000, -1000, -1000, -1000, -1000, -1000, 5158, 449, 5896, 449,
	-1000, -1000, -1000, 6478, -1000, -1000, 5896, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 818, -1000, -1000,
	811, -1000, -1000, 8379, 8379, 8379, 8379, 8379, 8379, 8379,
	8379, 8379, 8379, 8379, 8379, 8379, 8379, 8379, 8379, 8379,
	8379, 8379, 8379, 8379, 8379, 8379, 8379, 8379, 8379, 8304,
	808, 422, 8379, 83, -11, 5114, 535, 714, -72, -72,
	-81, -81, 5070, 317, -1000, 209, 4934, 429, 316, -1000,
	315, 5896, -1000, 7957, 233, 396, 314, 709, -1000, 8379,
	186, 4932, -1000, -1000, 566, -1000, 449, 215, 566, -1000,
	-1000, -1000, -62, -1000, 679, 213, 184, 676, 519, 412,
	808, 422, -1000, -29, 1023, 563, 210, 7957, -1000, -32,
	7957, 572, -1000, 80, 210, -1000, 5026, 572, 7957, 7957,
	79, 4982, -1000, 570, -1000, 6628, -1000, -1000, -1000, -1000,
	-1000, 1911, -81, -81, -72, -72, -72, -72, 1333, 1788,
	82, 33, 33, -81, 5982, 6108, 1955, 6314, 1571, -14,
	-14, -14, -14, 91, 91, 91, 91, 8379, 1190, 422,
	183, -1000, -1000, 8379, 8379, -1000, -1000, -1000, -1000, 4934,
	-1000, 375, 209, 234, -1000, 7957, 1051, -1000, -1000, -1000,
	-1000, -1000, 303, -1000, 676, 182, 1529, -1000, 404, 180,
	3616, 8379, -1000, 363, 563, 358, 355, 207, -1000, 778,
	-1000, 422, 817, -1000, -1000, 767, -30, -1000, 688, 708,
	-1000, 802, 563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6065, -1000, 77, -1000, -1000, 340, -1000, 62,
	59, -1000, -1000, -1000, 67, 5896, 449, -1000, 6151, 8379,
	-1000, 1807, 5852, -1000, 296, 220, -1000, 179, -1000, 4148,
	-1000, 352, 4410, -1000, -34, 4410, 294, -1000, -1000, 766,
	-1000, -1000, 172, -64, -1000, -46, -66, -1000, 793, 53,
	-1000, -67, -59, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6151, 8379, -1000, -1000, 4148, 4279, 4148, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3483, 178, 3350, 3217, -37, -1000,
	744, 8379, -1000, 736, 8379, -70, 791, 8379, -1000, 563,
	-1000, 564, 5852, 4148, -1000, -1000, -1000, 3084, 2951, -1000,
	346, -1000, -1000, -1000, 171, -1000, -1000, -82, -1000, 8379,
	205, -1000, -1000, 338, 564, -1000, 292, 290, 670, 703,
	433, -1000, 2818, -1000, 273, -1000, -1000, 733, 8379, -1000,
	519, -1000, -1000, -1000, -1000, 563, 708, 789, 214, -1000,
	2685, -1000, -1000, 177, -80, -1000, 787, -1000, -1000, -1000,
	685, 281, 563, -1000, -1000, 685, -1000, 202, -1000, -1000,
	-1000, -1000, -1000, 563, 2552, 723, -1000, 58, 345, -1000,
	2419, -1000,
}
var yyPgo = [...]int{

	0, 29, 1091, 1090, 38, 31, 30, 572, 1088, 1086,
	134, 217, 204, 88, 1385, 82, 63, 59, 651, 1422,
	1085, 33, 1081, 1080, 1079, 136, 1078, 36, 37, 1077,
	1076, 1075, 1074, 135, 1073, 1072, 24, 1069, 26, 48,
	45, 1068, 634, 34, 1066, 1, 1065, 1063, 27, 1062,
	73, 68, 61, 1060, 1059, 1058, 35, 1057, 1056, 4,
	1055, 1054, 1053, 17, 1051, 1049, 1048, 1047, 51, 5,
	1046, 1045, 1042, 1041, 1040, 2, 1037, 631, 1033, 18,
	22, 1032, 1018, 1017, 15, 1013, 1007, 14, 6, 19,
	1001, 1000, 998, 39, 0, 995, 991, 990, 117, 988,
	985, 513, 983, 982, 42, 8, 980, 9, 976, 974,
	971, 49, 962, 961, 959, 958, 955, 952, 3, 951,
	16, 950, 949, 948, 28, 947, 945, 939, 933, 930,
	929, 928, 21, 924, 923, 922, 25, 914, 23, 12,
	911, 40, 907, 902, 869, 866, 41, 13, 865, 863,
	7, 20,
}
var yyR1 = [...]int{

	0, 149, 93, 93, 94, 94, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 95, 95,
	4, 4, 4, 4, 96, 96, 5, 5, 5, 5,
	97, 97, 6, 6, 6, 6, 53, 53, 98, 98,
	24, 24, 24, 24, 24, 25, 25, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 115, 115, 58, 58, 116,
	116, 117, 117, 59, 113, 113, 56, 51, 52, 147,
	147, 148, 148, 60, 61, 61, 64, 64, 64, 64,
	90, 90, 2, 92, 92, 91, 91, 124, 124, 89,
	89, 88, 88, 88, 85, 85, 84, 84, 57, 57,
	114, 114, 82, 82, 82, 82, 111, 111, 111, 150,
	150, 86, 86, 108, 108, 109, 109, 54, 54, 55,
	55, 118, 118, 119, 119, 63, 63, 62, 62, 62,
	62, 80, 80, 80, 125, 125, 68, 68, 68, 68,
	99, 99, 27, 27, 27, 100, 100, 100, 100, 120,
	120, 65, 65, 65, 65, 67, 126, 126, 81, 81,
	127, 127, 128, 128, 69, 69, 70, 129, 129, 73,
	73, 72, 71, 71, 74, 74, 83, 83, 121, 121,
	122, 122, 130, 130, 75, 75, 75, 75, 75, 75,
	123, 123, 123, 123, 66, 66, 112, 112, 87, 87,
	110, 110, 136, 136, 134, 134, 135, 135, 135, 137,
	137, 42, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 50, 50, 50, 50,
	47, 47, 47, 47, 46, 46, 1, 107, 107, 106,
	106, 106, 106, 23, 23, 23, 23, 23, 23, 23,
	23, 11, 11, 11, 11, 45, 45, 45, 43, 43,
	41, 41, 144, 144, 143, 49, 49, 49, 131, 131,
	131, 79, 79, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 28, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	35, 35, 35, 35, 29, 29, 29, 29, 29, 29,
	29, 132, 132, 151, 151, 133, 133, 133, 133, 14,
	14, 48, 48, 16, 17, 18, 19, 19, 145, 145,
	138, 140, 140, 76, 139, 139, 139, 40, 40, 44,
	44, 12, 22, 22, 20, 20, 20, 21, 21, 21,
	10, 10, 10, 9, 9, 13, 13, 141, 141, 142,
	142, 142, 39, 39, 146, 146, 105, 105, 38, 38,
	38, 104, 104, 103, 103, 103, 103, 103, 103, 103,
	103, 101, 101, 101, 101, 33, 33, 33, 33, 33,
	33, 34, 34, 34, 37, 37, 37, 37, 37, 37,
	37, 37, 102, 102, 36, 36, 30, 30, 31, 32,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 4, 2, 3, 1,
	1, 3, 2, 4, 3, 1, 1, 3, 2, 4,
	3, 1, 1, 3, 2, 4, 5, 4, 2, 0,
	1, 1, 1, 1, 4, 1, 2, 3, 5, 8,
	3, 5, 9, 3, 2, 3, 2, 3, 2, 3,
	3, 2, 3, 3, 3, 1, 2, 5, 8, 8,
	5, 1, 6, 3, 3, 0, 9, 0, 4, 1,
	0, 1, 2, 8, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 9, 7, 6, 1, 2, 1, 2,
	0, 2, 1, 0, 2, 0, 2, 1, 3, 0,
	2, 1, 2, 4, 1, 4, 1, 4, 1, 4,
	3, 5, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 0, 4, 0, 5, 0, 2, 0,
	3, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	1, 2, 3, 3, 1, 3, 1, 1, 2, 2,
	3, 1, 1, 2, 4, 3, 5, 1, 3, 2,
	0, 3, 2, 1, 8, 3, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 2, 3, 1, 3, 1,
	1, 3, 4, 3, 0, 1, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 5, 4, 3, 1, 0, 1,
	3, 1, 2, 1, 4, 3, 2, 1, 1, 0,
	1, 3, 6, 3, 4, 6, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 4, 5, 4, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 9, 10, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 3, 1, 0, 4, 3,
	4, 1, 2, 2, 4, 3, 4, 4, 4, 4,
	2, 1, 1, 3, 2, 1, 3, 2, 1, 1,
	4, 1, 2, 0, 2, 0, 2, 1, 0, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 1,
	3, 2, 4, 3, 1, 1, 1, 4, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 2, 2, 3,
	1, 1, 3, 2, 1, 1, 1, 1, 3, 3,
	1, 0, 2, 0, 1, 5, 3, 3, 1, 1,
	1, 3, 3, 1, 1, 1, 5, 1, 2, 0,
	3, 4, 4, 1, 1, 1, 0, 1, 2, 3,
	3, 1, 4, 4, 1, 1, 1, 1, 2, 1,
	4, 4, 1, 1, 4, 0, 1, 1, 1, 4,
	4, 1, 1, 3, 1, 2, 3, 1, 1, 4,
	0, 0, 2, 5, 3, 3, 1, 6, 4, 4,
	2, 2, 2, 1, 2, 1, 4, 3, 3, 6,
	3, 1, 1, 1, 4, 4, 4, 2, 2, 4,
	2, 2, 1, 3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -149, -93, -3, 2, -25, -51, -52, 51, 79,
	44, -53, -26, 10, -60, -61, 38, 119, 7, 21,
	20, 23, 30, 34, 35, 39, -50, 46, 98, 19,
	14, -14, 48, 25, 27, 121, 40, 43, 36, -1,
	-64, -2, 97, -16, -15, 37, 52, 99, 53, 100,
	54, -19, 59, 92, -18, 104, 105, 130, 129, 131,
	132, -48, -42, 123, -37, 107, 108, 109, 110, 111,
	112, 113, 6, 133, -29, -47, -46, 118, 96, -20,
	91, 49, 50, 4, 5, 84, 85, 86, 11, -35,
	-32, -7, 117, 74, 62, 18, 60, 125, -21, -22,
	-23, -30, -94, 82, -11, 8, 9, 66, 67, 81,
	63, 64, 65, 80, -10, -146, -44, -12, -40, -9,
	134, 12, 123, -94, 119, 82, 10, -95, 37, 38,
	-4, -94, 82, 121, 135, 122, 10, -98, -48, 123,
	-48, -25, -1, 79, 123, -48, 121, -14, 97, 98,
	121, -14, 121, -15, -19, -14, 121, -99, -27, 12,
	134, -100, -1, 12, -112, -14, 121, 149, 150, 87,
	89, 88, 151, 128, 152, 163, 130, 129, 164, 167,
	165, 166, 161, 162, 155, 156, 153, 154, 157, 158,
	159, 160, 90, 127, 123, 123, 123, 119, -14, 10,
	-147, 128, 10, 10, -15, -19, -14, 52, 52, 136,
	137, 138, 139, 148, 140, 141, 142, 143, 144, 145,
	146, 147, 123, -14, 104, 105, -18, -19, -94, 79,
	82, -11, -12, 98, -18, -14, -14, -14, -14, -42,
	-14, -50, -14, -14, -14, -14, -14, -14, -14, -49,
	123, -48, -14, 125, 125, -131, 17, -101, -33, 12,
	76, 77, -14, 57, -43, -11, -41, -94, 79, 82,
	-21, -10, -146, -12, 123, 123, -14, -14, 123, -14,
	-14, 125, -101, 17, 17, 75, -101, 125, 123, -104,
	-103, -14, 128, 125, 125, 82, -80, 123, -94, 78,
	125, 119, -10, 134, 78, -80, 119, 124, 121, 119,
	-93, -94, 121, 135, -96, -5, -94, 82, -97, -6,
	-94, 82, 29, -94, 10, 136, -24, 120, 2, -25,
	-51, -52, 51, -25, 122, -86, -25, 122, 21, -147,
	-87, -110, -14, -82, 119, 122, 121, 121, 121, 121,
	121, 135, -16, 119, -19, 121, 135, -147, 136, 121,
	135, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -43, -14, 122, -113,
	-56, -19, -19, -15, -114, 10, -98, 121, 121, 10,
	123, -90, 55, -92, 55, 58, -14, 128, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-105, -38, -19, 59, 82, -94, 78, 78, 124, 124,
	124, 124, -13, -14, -13, 118, -33, -33, 17, 125,
	57, -14, 11, -19, -141, -142, -40, -39, -10, -146,
	10, 119, -79, -80, 78, 82, -94, 57, -10, 78,
	-102, -36, -19, -15, -19, -15, -14, -13, 117, 75,
	75, -13, -104, 126, -151, 135, 58, -17, -19, -13,
	-13, 10, 124, -125, -50, -68, -15, -19, 128, 83,
	-80, -39, -40, 10, 52, -13, -14, -39, -40, 10,
	-14, 121, -93, 120, -80, -4, 121, 135, 29, -94,
	121, 135, 29, -94, 10, 29, 136, -28, -77, -7,
	-31, -94, 79, 82, 60, 125, -8, 62, -78, 18,
	74, -11, 131, 132, 130, 129, 123, 123, -108, -98,
	-98, -48, 121, 135, -111, 121, -111, 121, -27, -14,
	12, 123, -28, -14, 122, -14, 124, 135, 29, 29,
	124, 135, 136, 120, 123, -118, -119, -63, -62, 60,
	61, -45, -94, 79, 82, -91, 56, -45, 119, -124,
	-45, -15, -19, -19, 91, 124, 135, 123, -94, -137,
	-135, -134, -136, 125, -138, 57, 126, 126, -34, 10,
	13, 12, 10, 120, 125, 120, -139, -76, -140, -80,
	125, 119, -10, -14, -40, -94, -141, -40, 124, 135,
	124, 124, 124, 126, 126, 124, -14, 128, -14, 128,
	126, 126, 124, 135, 124, -17, -14, -80, -80, 126,
	120, -80, -80, 120, 120, -5, 10, 29, -6, 10,
	29, 10, -28, 125, 130, 129, 164, 167, 165, 166,
	151, 128, 152, 161, 162, 163, 88, 89, 87, 150,
	149, 155, 156, 153, 154, 157, 159, 158, 160, 127,
	82, -94, 123, -132, -133, -77, 17, 78, -77, -77,
	-77, -77, -77, 124, -54, 93, 94, -109, 22, 121,
	-87, -14, 120, 32, 33, -111, 31, -111, 120, 136,
	-118, -14, 121, -56, -88, -19, 128, 59, -88, -57,
	-25, 122, 10, -28, -115, 41, -118, 124, 135, -147,
	82, -94, 119, -124, -120, 135, -43, 136, -38, -105,
	125, -136, -138, -13, -141, 126, -14, -145, 125, 125,
	-13, -14, 120, -144, -36, 58, -17, -17, -68, 10,
	10, -77, -77, -77, -77, -77, -77, -77, -77, -77,
	-77, -77, -77, -77, -77, -77, -77, -77, -77, -77,
	-77, -77, -77, -77, -77, -77, -77, 122, -77, -94,
	-132, 126, -151, 135, 58, 10, 52, 124, 121, -48,
	-25, -55, 93, 94, 121, 121, -14, -150, 122, 121,
	120, 121, 31, -28, 124, -89, 58, -19, 123, -89,
	-98, 136, -58, 42, 123, 124, -107, 44, -63, -148,
	83, -94, -120, 120, -65, -121, -66, -67, -122, -130,
	47, 38, 44, -75, 103, 102, 101, 98, 99, 100,
	-45, -79, -14, 124, -13, 126, -139, 126, -138, -13,
	-13, 126, 120, -143, 57, -14, 128, 126, -77, 122,
	124, -77, -77, -25, 95, -48, 122, -87, -150, -98,
	121, -107, 124, -88, -105, 124, 28, -28, 119, -45,
	119, 119, 123, 12, 120, -123, 12, 121, 135, -1,
	-75, 10, -126, -45, 126, 120, 126, 126, -141, -17,
	-77, 58, 121, 122, -98, 124, -98, 119, -84, -25,
	122, 124, -84, 121, -98, 12, -98, -98, -106, 12,
	128, 136, 121, 135, 136, 10, -147, 136, -81, 135,
	121, 119, -77, -98, -85, -25, 122, -98, -98, 120,
	124, 120, 120, 124, 135, 12, -28, 12, -28, 136,
	10, -28, -45, -127, -128, -69, -70, -71, -72, -73,
	-45, 10, -98, 120, 26, 119, 12, 128, 136, -28,
	123, 120, -69, 121, 121, 45, 29, 78, 24, 121,
	-98, 12, -28, -118, -129, -45, -74, -75, 10, 121,
	120, 124, 135, 10, -116, -117, -59, 41, -83, 121,
	119, -45, -59, 123, -98, -45, 120, 12, 124, 119,
	-98, 120,
}
var yyDef = [...]int{

	3, -2, -2, 2, 6, 7, 8, 9, 0, 0,
	0, 0, 45, 4, 87, 88, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	65, 0, 0, 0, 0, 71, 0, 0, 0, 89,
	0, 0, 303, 429, 430, 316, 96, 0, 98, 0,
	102, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 298, 299, 300, 348, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	416, 417, 0, 0, 420, 355, 0, 481, 454, 455,
	456, 410, -2, 0, 0, 353, 354, 356, 357, 358,
	359, 360, 361, 362, -2, 0, 459, 0, 0, 462,
	474, 463, 0, 0, 3, 0, 4, 0, 0, 0,
	19, 20, 0, 17, 0, 46, 0, 0, 0, 0,
	0, 0, 89, 0, 218, 0, 54, 0, 303, 331,
	56, 0, 58, 430, -2, 0, 61, 0, 161, 162,
	0, 0, 89, 167, 0, 217, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	0, 90, 100, 103, -2, -2, 0, 97, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 236, 249, 251, 250, 435, 332, 0,
	0, 0, 0, 331, 252, 270, 271, 272, 273, 284,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 296,
	0, 347, 297, 465, 465, 0, 349, 350, 493, 495,
	0, 0, 302, 0, 351, 338, 339, 332, 0, 0,
	341, -2, 0, 0, 0, 0, 507, 508, 0, 510,
	511, 465, 0, 0, 0, 364, 0, 465, 481, 0,
	423, 486, 0, 465, 465, 0, 323, 0, -2, 0,
	465, 0, -2, 475, 0, 330, 0, 0, 11, 3,
	0, -2, 14, 0, 0, 25, 26, 0, 0, 31,
	32, 0, 0, 22, 0, 0, 38, 47, 40, 41,
	42, 43, 0, 133, 39, 50, 131, 39, 0, 0,
	0, 219, 221, 53, 126, 126, 55, 57, 59, 60,
	62, 0, 163, 0, 433, 63, 0, 0, 0, 64,
	0, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, -2, -2,
	-2, -2, -2, -2, -2, -2, 282, 0, 0, 0,
	84, 86, -2, 430, 0, 0, 0, 73, 74, 0,
	-2, 105, 0, 0, 0, 0, 233, 0, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	0, 477, 478, 0, 0, 334, 0, 0, 229, 431,
	432, 346, 0, 466, 0, 301, 494, 491, 492, 0,
	0, 0, 414, 0, 446, 467, 468, 471, 447, 0,
	472, 0, 231, 352, 0, 0, 334, 0, 458, 0,
	0, 512, -2, -2, -2, 430, 0, 0, 418, 363,
	419, 0, 0, 315, 482, 424, 0, 490, 434, 0,
	0, 5, 151, 0, 0, 154, -2, -2, 0, 0,
	325, 0, 449, -2, 519, 0, 0, 0, 450, -2,
	0, 10, 0, 13, 324, 18, 15, 0, 0, 28,
	16, 0, 0, 34, 21, 0, 0, 37, 366, 367,
	368, -2, 0, 0, 0, 421, 374, 375, 376, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 137, -2,
	0, 0, 218, 0, 0, 126, 0, 126, 160, 0,
	165, -2, 168, 216, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 75, -2, 0, 141, 143, 89, 148,
	149, 150, 335, 0, 0, 0, 0, 101, 170, 104,
	107, -2, -2, 234, 0, 0, 480, 480, 333, 285,
	230, 227, 228, 465, 223, 0, 311, 310, 0, 501,
	502, 503, 497, 498, 0, 500, 439, 444, 445, 443,
	465, 0, 448, 0, 449, 333, 343, 450, 504, 0,
	505, 506, 509, 313, 312, 314, 484, 0, 485, 0,
	452, 453, 152, 0, 153, 158, 159, 326, 327, 460,
	461, 328, 329, 464, 12, 24, 27, 0, 30, 33,
	0, 23, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 421, 0, 423, 428, 0, 0, 384, 385,
	407, 408, 0, 0, 48, 0, 0, 139, 0, 51,
	0, 220, 122, 0, 0, 0, 0, 0, 164, 0,
	0, 286, 67, 85, 109, 111, 0, 0, 109, 70,
	118, 39, 0, 120, 77, 0, 0, 317, 147, 91,
	0, 337, 170, 106, 200, 0, 351, 0, 476, 0,
	465, 226, 222, 0, 446, 496, 0, 436, 465, 465,
	0, 0, 473, 340, 513, 0, 488, 489, 155, 29,
	35, 0, 378, 379, 380, 381, 382, 383, 386, 387,
	388, 389, 390, 391, 392, 393, 394, 395, 396, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 0, -2,
	0, 373, 422, 424, 0, 365, 518, 409, 44, 0,
	138, 0, 0, 0, 132, 218, 0, 39, 129, 130,
	123, 124, 0, 166, 317, 0, 0, 112, 480, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 144, 0,
	92, 336, 200, 95, 169, 0, 0, 173, 0, -2,
	199, 0, 0, 202, 204, 205, 206, 207, 208, 209,
	108, 235, 232, 479, 0, 225, 440, 0, 438, 0,
	0, 469, 470, 342, 0, 483, 0, 377, 405, 0,
	372, 426, 427, 134, 0, 0, 39, 0, 39, -2,
	125, 0, 0, 110, 0, 0, 0, 121, 39, 0,
	39, 39, 0, 145, 94, 0, 212, 172, 0, 89,
	203, 0, 0, 176, 224, 499, 442, 441, 344, 487,
	406, 0, 49, 39, -2, 0, -2, 39, 68, 116,
	39, 113, 69, 119, 0, 0, 0, 0, 0, 321,
	0, 0, 171, 0, 0, 0, 0, 0, 175, 0,
	178, 180, 425, -2, 52, 114, 39, 0, 0, 78,
	0, 93, 304, 318, 0, 322, 146, 210, 213, 0,
	0, 215, 177, 0, 181, 182, 0, 0, 190, 0,
	0, -2, 0, 305, 0, 39, 319, 0, 0, 214,
	-2, 179, 183, 184, 185, 0, 194, 0, 0, 117,
	0, 320, 211, 0, 186, 187, 0, -2, 191, 115,
	80, 0, 0, 192, 76, 79, 81, 0, 174, 196,
	39, 188, 82, 0, 0, 0, 197, 0, 0, 39,
	0, 83,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:244
		{
			yylex.(*Parser).rootNode = node.NewRoot(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yylex.(*Parser).rootNode, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:252
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:257
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:262
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			yylex.(*Parser).comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:269
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			yylex.(*Parser).comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:279
		{
			// error
			yyVAL.node = nil
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:284
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:286
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:288
		{
			yyVAL.node = yyDollar[1].node
		}
	case 10:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:290
		{
			yyVAL.node = stmt.NewHaltCompiler()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:296
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:306
		{
			name := name.NewName(yyDollar[2].list)
			innerStmtList := stmt.NewInnerStmtList(yyDollar[4].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewNamespace(name, stmtList)

			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[5].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:321
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[3].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewNamespace(nil, stmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:333
		{
			innerUseList := stmt.NewInnerUseList(yyDollar[2].list)
			yyVAL.node = stmt.NewSimpleUse(nil, innerUseList)

			yylex.(*Parser).positions.AddPosition(innerUseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:343
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			innerUseList := stmt.NewInnerUseList(yyDollar[3].list)
			yyVAL.node = stmt.NewSimpleUse(useType, innerUseList)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(innerUseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:356
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			innerUseList := stmt.NewInnerUseList(yyDollar[3].list)
			yyVAL.node = stmt.NewSimpleUse(useType, innerUseList)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(innerUseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:369
		{
			yyVAL.node = yyDollar[1].node
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:374
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:376
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:381
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:391
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:404
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:414
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:430
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:432
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:437
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:447
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:460
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:470
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:486
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:488
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:493
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:503
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:516
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:526
		{
			name := name.NewName(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[2].list))
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:542
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:558
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:577
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:583
		{
			yyVAL.list = []node.Node{}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:589
		{
			// error
			yyVAL.node = nil
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:594
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:596
		{
			yyVAL.node = yyDollar[1].node
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:598
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:600
		{
			yyVAL.node = stmt.NewHaltCompiler()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:610
		{
			yyVAL.node = yyDollar[1].node
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:612
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			yylex.(*Parser).comments.AddComments(label, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:625
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewStmtList(innerStmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:635
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:649
		{
			stmts := stmt.NewInnerStmtList(yyDollar[4].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewAltIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:658
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.While:
				n.Cond = yyDollar[2].node
			case *stmt.AltWhile:
				n.Cond = yyDollar[2].node
			}

			yyVAL.node = yyDollar[3].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:672
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:678
		{
			switch n := yyDollar[9].node.(type) {
			case *stmt.For:
				n.Init = yyDollar[3].node.(*stmt.ForExprList)
				n.Cond = yyDollar[5].node.(*stmt.ForExprList)
				n.Loop = yyDollar[7].node.(*stmt.ForExprList)
			case *stmt.AltFor:
				n.Init = yyDollar[3].node.(*stmt.ForExprList)
				n.Cond = yyDollar[5].node.(*stmt.ForExprList)
				n.Loop = yyDollar[7].node.(*stmt.ForExprList)
			}

			yyVAL.node = yyDollar[9].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:696
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.Switch:
				n.Cond = yyDollar[2].node
			case *stmt.AltSwitch:
				n.Cond = yyDollar[2].node
			default:
				panic("unexpected node type")
			}

			yyVAL.node = yyDollar[3].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:712
		{
			yyVAL.node = stmt.NewBreak(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:718
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:724
		{
			yyVAL.node = stmt.NewContinue(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:730
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:736
		{
			yyVAL.node = stmt.NewReturn(nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:742
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:748
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:754
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:760
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:766
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:772
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:778
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:784
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:790
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:796
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			yyVAL.node = yyDollar[8].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:825
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			yyVAL.node = yyDollar[8].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:854
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:860
		{
			yyVAL.node = stmt.NewNop()
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:866
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[3].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewTry(stmtList, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:883
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:889
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(label, yyDollar[2].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:902
		{
			yyVAL.list = []node.Node{}
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:904
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			innerStmtList := stmt.NewInnerStmtList(yyDollar[7].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, stmtList)

			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[7].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[6].token, yyDollar[8].token))
			yylex.(*Parser).positions.AddPosition(catch, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:926
		{
			yyVAL.node = nil
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:928
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[3].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewFinally(stmtList)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:943
		{
			yyVAL.list = yyDollar[1].list
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:945
		{
			yyVAL.list = []node.Node{}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:950
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:952
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:957
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			innerStmtList := stmt.NewInnerStmtList(yyDollar[7].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, stmtList)

			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[7].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[6].token, yyDollar[8].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:978
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:980
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:985
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:990
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:995
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1000
		{
			yyVAL.token = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1002
		{
			yyVAL.token = yyDollar[1].token
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1007
		{
			yyVAL.token = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1009
		{
			yyVAL.token = yyDollar[1].token
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1014
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			innerStmtList := stmt.NewInnerStmtList(yyDollar[8].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			innerParameterList := node.NewInnerParameterList(yyDollar[5].list)
			parameterList := node.NewParameterList(innerParameterList)
			yyVAL.node = stmt.NewFunction(name, yyDollar[2].token != nil, parameterList, nil, stmtList, "")

			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[8].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[7].token, yyDollar[9].token))
			yylex.(*Parser).positions.AddPosition(innerParameterList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))
			yylex.(*Parser).positions.AddPosition(parameterList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[4].token, yyDollar[6].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1036
		{
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				name := node.NewIdentifier(yyDollar[2].token.Value)
				innerStmtList := stmt.NewInnerStmtList(yyDollar[6].list)
				stmtList := stmt.NewStmtList(innerStmtList)

				yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
				yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[6].list))
				yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[5].token, yyDollar[7].token))

				n.ClassName = name
				n.StmtList = stmtList
				n.Extends = yyDollar[3].ClassExtends
				n.Implements = yyDollar[4].ClassImplements

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				name := node.NewIdentifier(yyDollar[2].token.Value)
				innerStmtList := stmt.NewInnerStmtList(yyDollar[6].list)
				stmtList := stmt.NewStmtList(innerStmtList)

				yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
				yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[6].list))
				yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[5].token, yyDollar[7].token))

				n.TraitName = name
				n.StmtList = stmtList
			}

			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1069
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			innerStmtList := stmt.NewInnerStmtList(yyDollar[5].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewInterface(name, yyDollar[3].InterfaceExtends, stmtList, "")

			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[4].token, yyDollar[6].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1088
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1094
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1104
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1110
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1123
		{
			yyVAL.ClassExtends = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1125
		{
			yyVAL.ClassExtends = stmt.NewClassExtends(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassExtends, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1135
		{
			yyVAL.token = yyDollar[1].token
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1140
		{
			yyVAL.InterfaceExtends = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1142
		{
			yyVAL.InterfaceExtends = stmt.NewInterfaceExtends(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.InterfaceExtends, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1152
		{
			yyVAL.ClassImplements = nil
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1154
		{
			yyVAL.ClassImplements = stmt.NewClassImplements(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassImplements, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1164
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1166
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1171
		{
			yyVAL.node = nil
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1173
		{
			yyVAL.node = yyDollar[2].node
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1178
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1180
		{
			yyVAL.node = expr.NewReference(yyDollar[2].node)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1186
		{
			list := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = list
			yylex.(*Parser).comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1196
		{
			yyVAL.node = stmt.NewFor(nil, nil, nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1201
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewAltFor(nil, nil, nil, stmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1215
		{
			yyVAL.node = stmt.NewForeach(nil, nil, nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1220
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			yyVAL.node = stmt.NewAltForeach(nil, nil, nil, stmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1234
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1236
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewStmtList(innerStmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1248
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1260
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1276
		{
			innerCaseList := stmt.NewInnerCaseList(yyDollar[2].list)
			caseList := stmt.NewCaseList(innerCaseList)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			yylex.(*Parser).positions.AddPosition(innerCaseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1286
		{
			innerCaseList := stmt.NewInnerCaseList(yyDollar[3].list)
			caseList := stmt.NewCaseList(innerCaseList)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			yylex.(*Parser).positions.AddPosition(innerCaseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1296
		{
			innerCaseList := stmt.NewInnerCaseList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltSwitch(nil, innerCaseList)

			yylex.(*Parser).positions.AddPosition(innerCaseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1304
		{

			innerCaseList := stmt.NewInnerCaseList(yyDollar[3].list)
			yyVAL.node = stmt.NewAltSwitch(nil, innerCaseList)

			yylex.(*Parser).positions.AddPosition(innerCaseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1317
		{
			yyVAL.list = []node.Node{}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1319
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			yylex.(*Parser).positions.AddPosition(_case, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			yylex.(*Parser).comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1326
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			yylex.(*Parser).positions.AddPosition(_default, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			yylex.(*Parser).comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1343
		{
			yyVAL.node = stmt.NewWhile(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1348
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltWhile(nil, innerStmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1361
		{
			yyVAL.list = nil
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1363
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1375
		{
			yyVAL.list = nil
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1377
		{
			stmts := stmt.NewInnerStmtList(yyDollar[5].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yylex.(*Parser).comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1392
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1394
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1404
		{
			yyVAL.node = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1406
		{
			stmts := stmt.NewInnerStmtList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1419
		{
			yyVAL.list = yyDollar[1].list
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1421
		{
			yyVAL.list = nil
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1426
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1428
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1433
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].token != nil, yyDollar[3].token != nil)

			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[3].token.Comments())
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1459
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].token != nil, yyDollar[3].token != nil)

			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[3].token.Comments())
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1489
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1491
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1497
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1503
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1509
		{
			innerArgumentList := node.NewInnerArgumentList(nil)
			yyVAL.node = node.NewArgumentList(innerArgumentList)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1517
		{
			innerArgumentList := node.NewInnerArgumentList(yyDollar[2].list)
			yyVAL.node = node.NewArgumentList(innerArgumentList)

			// save position
			yylex.(*Parser).positions.AddPosition(innerArgumentList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1526
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			innerArgumentList := node.NewInnerArgumentList([]node.Node{arg})
			yyVAL.node = node.NewArgumentList(innerArgumentList)

			// save position
			yylex.(*Parser).positions.AddPosition(arg, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(innerArgumentList, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1541
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1543
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1548
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1554
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1560
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1566
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1575
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1577
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1583
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1593
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1599
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1609
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1626
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1643
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1660
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1682
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1684
		{
			yyVAL.list = []node.Node{}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1690
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1696
		{
			yyVAL.node = yyDollar[1].node
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1698
		{
			yyVAL.node = yyDollar[1].node
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1700
		{
			var stmtList *stmt.StmtList
			switch n := yyDollar[8].node.(type) {
			case *stmt.StmtList:
				stmtList = n
			default:
				stmtList = nil
			}

			name := node.NewIdentifier(yyDollar[4].token.Value)
			innerParameterList := node.NewInnerParameterList(yyDollar[6].list)
			parameterList := node.NewParameterList(innerParameterList)
			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].token != nil, parameterList, nil, stmtList, "")

			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(innerParameterList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[6].list))
			yylex.(*Parser).positions.AddPosition(parameterList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[5].token, yyDollar[7].token))

			if yyDollar[1].list == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[8].node))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[8].node))
			}

			yylex.(*Parser).comments.AddComments(name, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1732
		{
			var adaptationList *stmt.TraitAdaptationList
			switch n := yyDollar[3].node.(type) {
			case *stmt.TraitAdaptationList:
				adaptationList = n
			default:
				adaptationList = nil
			}

			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, adaptationList)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1749
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1751
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1756
		{
			yyVAL.node = stmt.NewNop()

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1762
		{
			innerAdaptationList := stmt.NewInnerTraitAdaptationList(yyDollar[2].list)
			yyVAL.node = stmt.NewTraitAdaptationList(innerAdaptationList)

			yylex.(*Parser).positions.AddPosition(innerAdaptationList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1773
		{
			yyVAL.list = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1775
		{
			yyVAL.list = yyDollar[1].list
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1780
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1782
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1787
		{
			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1789
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1794
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1803
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1805
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1810
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1820
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1825
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1838
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(alias, yyDollar[4].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1848
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1857
		{
			yyVAL.node = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1859
		{
			yyVAL.node = yyDollar[1].node
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1864
		{
			yyVAL.node = stmt.NewNop()

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1870
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewStmtList(innerStmtList)

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1881
		{
			yyVAL.list = yyDollar[1].list
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1883
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(modifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(modifier, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{modifier}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1894
		{
			yyVAL.list = nil
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1896
		{
			yyVAL.list = yyDollar[1].list
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1901
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1903
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1908
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1914
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1920
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1926
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1932
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1938
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1947
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1963
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1979
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1995
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2014
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[3].token.Comments())

			yyDollar[1].node.(*stmt.ClassConstList).Consts = append(yyDollar[1].node.(*stmt.ClassConstList).Consts, constant)
			yylex.(*Parser).positions.AddPosition(yyDollar[1].node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2029
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(constant, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2046
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2048
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2054
		{
			yyVAL.node = stmt.NewForExprList(nil)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2058
		{
			yyVAL.node = stmt.NewForExprList(yyDollar[1].list)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2067
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2069
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2074
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2076
		{
			yyVAL.list = yyDollar[1].list
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2081
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2088
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2098
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2100
		{
			yyVAL.list = yyDollar[1].list
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2102
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2107
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2109
		{
			yyVAL.list = yyDollar[1].list
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2114
		{

			if yyDollar[3].node != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].node.(*node.ArgumentList))
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2130
		{
			list := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			yylex.(*Parser).comments.AddComments(list, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2140
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2146
		{
			yyVAL.node = assign.NewReference(yyDollar[1].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2152
		{
			var _new *expr.New

			if yyDollar[6].node != nil {
				_new = expr.NewNew(yyDollar[5].node, yyDollar[6].node.(*node.ArgumentList))
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
			} else {
				_new = expr.NewNew(yyDollar[5].node, nil)
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node))
			}
			yylex.(*Parser).comments.AddComments(_new, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.node = assign.NewReference(yyDollar[1].node, _new)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, _new))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2169
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2175
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2181
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2187
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2193
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2199
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2205
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2211
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2217
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2223
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2229
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2235
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2241
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2247
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2253
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2259
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2265
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2271
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2277
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2283
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2289
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2295
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2301
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2307
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2313
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2319
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2325
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2331
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2337
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2343
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2349
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2355
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2361
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2367
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2373
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2379
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2385
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2391
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2397
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2403
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2409
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2415
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2421
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2427
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2433
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2439
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2445
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2451
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2453
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2455
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn
				}
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2481
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2487
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2493
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2495
		{
			yyVAL.node = cast.NewInt(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2501
		{
			yyVAL.node = cast.NewDouble(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2507
		{
			yyVAL.node = cast.NewString(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2513
		{
			yyVAL.node = cast.NewArray(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2519
		{
			yyVAL.node = cast.NewObject(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2525
		{
			yyVAL.node = cast.NewBool(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2531
		{
			yyVAL.node = cast.NewUnset(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2537
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(yyDollar[2].node)
			} else {
				yyVAL.node = expr.NewExit(yyDollar[2].node)
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2547
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2553
		{
			yyVAL.node = yyDollar[1].node
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2555
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2557
		{
			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2559
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2565
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2571
		{
			yyVAL.node = expr.NewYield(nil, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:2577
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[8].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			innerParameterList := node.NewInnerParameterList(yyDollar[4].list)
			parameterList := node.NewParameterList(innerParameterList)
			yyVAL.node = expr.NewClosure(parameterList, yyDollar[6].list, nil, stmtList, false, yyDollar[2].token != nil, "")

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[8].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[7].token, yyDollar[9].token))
			yylex.(*Parser).positions.AddPosition(innerParameterList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))
			yylex.(*Parser).positions.AddPosition(parameterList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[5].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:2593
		{
			innerStmtList := stmt.NewInnerStmtList(yyDollar[9].list)
			stmtList := stmt.NewStmtList(innerStmtList)
			innerParameterList := node.NewInnerParameterList(yyDollar[5].list)
			parameterList := node.NewParameterList(innerParameterList)
			yyVAL.node = expr.NewClosure(parameterList, yyDollar[7].list, nil, stmtList, true, yyDollar[3].token != nil, "")

			yylex.(*Parser).positions.AddPosition(innerStmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[9].list))
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[8].token, yyDollar[10].token))
			yylex.(*Parser).positions.AddPosition(innerParameterList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))
			yylex.(*Parser).positions.AddPosition(parameterList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[4].token, yyDollar[6].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token))

			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2612
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2618
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2624
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2630
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2639
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2645
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2651
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(str, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[str])
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2661
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2670
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2676
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2685
		{
			yyVAL.token = yyDollar[1].token
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2690
		{
			yyVAL.list = []node.Node{}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2692
		{
			yyVAL.list = yyDollar[3].list
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2697
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClosureUse(variable)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2713
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[3].token.Comments())

			reference := expr.NewReference(variable)
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))

			use := expr.NewClosureUse(reference)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2732
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClosureUse(variable)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2748
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[2].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())

			reference := expr.NewReference(variable)
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			use := expr.NewClosureUse(reference)
			yylex.(*Parser).positions.AddPosition(use, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2770
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(name, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2780
		{
			funcName := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[funcName])
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2790
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[funcName])
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2800
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2806
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2812
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2818
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2824
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2833
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2839
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2845
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2851
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2860
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2866
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2872
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2881
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2883
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2888
		{
			yyVAL.node = yyDollar[1].node

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2924
		{
			yyVAL.node = yyDollar[1].node
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2930
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2932
		{
			yyVAL.list = []node.Node{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2938
		{
			yyVAL.list = yyDollar[2].list
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2943
		{
			yyVAL.node = nil
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2945
		{
			yyVAL.node = nil
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2947
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2952
		{
			yyVAL.list = []node.Node{}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2954
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2956
		{
			yyVAL.list = yyDollar[1].list
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2961
		{
			yyVAL.node = nil
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2968
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2974
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2980
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2986
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2992
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2998
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3004
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3010
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3016
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3022
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3028
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[2].token.Comments())

			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, []node.Node{encapsed})
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3038
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, nil)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3047
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3060
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3065
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3067
		{
			yyVAL.node = yyDollar[1].node
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3069
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3079
		{
			name := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3089
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3099
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3105
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3111
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3113
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3119
		{
			yyVAL.node = yyDollar[1].node
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3124
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3130
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3136
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3142
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3148
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3154
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3160
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3166
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3172
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3178
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3184
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3190
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3196
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3202
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3208
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3214
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3220
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3226
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3232
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3238
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3244
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3250
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3256
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3262
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3268
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3274
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3280
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3286
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3292
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3298
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3304
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3310
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3316
		{
			yyVAL.node = yyDollar[2].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3321
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3323
		{
			name := name.NewName(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).comments.AddComments(name, yylex.(*Parser).listGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3333
		{
			name := name.NewRelative(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3343
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[name])
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3356
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3366
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3368
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3370
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3372
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3378
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, yyDollar[2].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3384
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3393
		{
			yyVAL.list = nil
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3395
		{
			yyVAL.list = yyDollar[1].list
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3405
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3413
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3421
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3429
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3440
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3442
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3447
		{
			yyVAL.node = yyDollar[2].node
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3449
		{
			yyVAL.node = yyDollar[2].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3455
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3461
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3466
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3471
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yylex.(*Parser).comments.AddComments(nn, yylex.(*Parser).comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3524
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3529
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3531
		{
			yyVAL.list = []node.Node{}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3537
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3549
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3556
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = []node.Node{yyDollar[1].node, fetch}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3566
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].node.(*node.ArgumentList))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3574
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3576
		{
			yyVAL.list = yyDollar[1].list
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3578
		{
			yyVAL.list = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3583
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3585
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3598
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3604
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3614
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3619
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3625
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3633
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3634
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3635
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3641
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3643
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3653
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3658
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3664
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3670
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3676
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3686
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3695
		{
			yyVAL.node = nil
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3697
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3703
		{
			yyVAL.list = yyDollar[1].list
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3705
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3715
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3722
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3729
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3739
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3745
		{
			yyVAL.node = yyDollar[2].node
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3750
		{
			n := expr.NewVariable(nil)
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3758
		{
			n := expr.NewVariable(nil)
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3773
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3775
		{
			if yyDollar[1].node == nil {
				yyVAL.list = []node.Node{}
			} else {
				yyVAL.list = []node.Node{yyDollar[1].node}
			}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3787
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3793
		{
			item := expr.NewList(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(item, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(item, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayItem(nil, item)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(item))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[item])
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3803
		{
			yyVAL.node = nil
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3809
		{
			yyVAL.list = []node.Node{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3811
		{
			yyVAL.list = yyDollar[1].list
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3816
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3824
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3832
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3840
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3848
		{
			reference := expr.NewReference(yyDollar[6].node)
			arrayItem := expr.NewArrayItem(yyDollar[3].node, reference)
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[5].token, yyDollar[6].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3858
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3868
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(yyDollar[1].node, reference)
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yylex.(*Parser).comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3877
		{
			reference := expr.NewReference(yyDollar[2].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3890
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3892
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3899
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3901
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			yylex.(*Parser).comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3911
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(name, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3921
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3934
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(fetch, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3950
		{
			yyVAL.node = yyDollar[2].node
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3956
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[2].token.Comments())
			yylex.(*Parser).comments.AddComments(variable, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3970
		{
			yyVAL.node = yyDollar[2].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3975
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3981
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3993
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			yylex.(*Parser).comments.AddComments(identifier, yyDollar[1].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4006
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4012
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4018
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4024
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4030
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4036
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4042
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4048
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4057
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4059
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4064
		{
			yyVAL.node = yyDollar[1].node
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4066
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4071
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4081
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4094
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4107
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			yylex.(*Parser).comments.AddComments(target, yyDollar[3].token.Comments())
			yylex.(*Parser).comments.AddComments(yyVAL.node, yylex.(*Parser).comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
